apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    istio-injection: enabled
  name: service-graph
spec: {}
status: {}
---
apiVersion: v1
data:
  service-graph: |
    services:
    - isEntrypoint: true
      name: svc-0
      numReplicas: 2
      script:
      - - call:
            service: svc-0-0
            size: 0B
        - call:
            service: svc-0-1
            size: 0B
        - call:
            service: svc-0-2
            size: 0B
        - call:
            service: svc-0-3
            size: 0B
        - call:
            service: svc-0-4
            size: 0B
        - call:
            service: svc-0-5
            size: 0B
        - call:
            service: svc-0-6
            size: 0B
        - call:
            service: svc-0-7
            size: 0B
        - call:
            service: svc-0-8
            size: 0B
        - call:
            service: svc-0-9
            size: 0B
        - call:
            service: svc-0-10
            size: 0B
        - call:
            service: svc-0-11
            size: 0B
        - call:
            service: svc-0-12
            size: 0B
        - call:
            service: svc-0-13
            size: 0B
        - call:
            service: svc-0-14
            size: 0B
        - call:
            service: svc-0-15
            size: 0B
        - call:
            service: svc-0-16
            size: 0B
        - call:
            service: svc-0-17
            size: 0B
        - call:
            service: svc-0-18
            size: 0B
        - call:
            service: svc-0-19
            size: 0B
        - call:
            service: svc-0-20
            size: 0B
        - call:
            service: svc-0-21
            size: 0B
        - call:
            service: svc-0-22
            size: 0B
        - call:
            service: svc-0-23
            size: 0B
        - call:
            service: svc-0-24
            size: 0B
        - call:
            service: svc-0-25
            size: 0B
        - call:
            service: svc-0-26
            size: 0B
        - call:
            service: svc-0-27
            size: 0B
        - call:
            service: svc-0-28
            size: 0B
        - call:
            service: svc-0-29
            size: 0B
        - call:
            service: svc-0-30
            size: 0B
        - call:
            service: svc-0-31
            size: 0B
        - call:
            service: svc-0-32
            size: 0B
        - call:
            service: svc-0-33
            size: 0B
        - call:
            service: svc-0-34
            size: 0B
        - call:
            service: svc-0-35
            size: 0B
        - call:
            service: svc-0-36
            size: 0B
        - call:
            service: svc-0-37
            size: 0B
        - call:
            service: svc-0-38
            size: 0B
        - call:
            service: svc-0-39
            size: 0B
        - call:
            service: svc-0-40
            size: 0B
        - call:
            service: svc-0-41
            size: 0B
        - call:
            service: svc-0-42
            size: 0B
        - call:
            service: svc-0-43
            size: 0B
        - call:
            service: svc-0-44
            size: 0B
        - call:
            service: svc-0-45
            size: 0B
        - call:
            service: svc-0-46
            size: 0B
        - call:
            service: svc-0-47
            size: 0B
        - call:
            service: svc-0-48
            size: 0B
        - call:
            service: svc-0-49
            size: 0B
        - call:
            service: svc-0-50
            size: 0B
        - call:
            service: svc-0-51
            size: 0B
        - call:
            service: svc-0-52
            size: 0B
        - call:
            service: svc-0-53
            size: 0B
        - call:
            service: svc-0-54
            size: 0B
        - call:
            service: svc-0-55
            size: 0B
        - call:
            service: svc-0-56
            size: 0B
        - call:
            service: svc-0-57
            size: 0B
        - call:
            service: svc-0-58
            size: 0B
        - call:
            service: svc-0-59
            size: 0B
        - call:
            service: svc-0-60
            size: 0B
        - call:
            service: svc-0-61
            size: 0B
        - call:
            service: svc-0-62
            size: 0B
        - call:
            service: svc-0-63
            size: 0B
        - call:
            service: svc-0-64
            size: 0B
        - call:
            service: svc-0-65
            size: 0B
        - call:
            service: svc-0-66
            size: 0B
        - call:
            service: svc-0-67
            size: 0B
        - call:
            service: svc-0-68
            size: 0B
        - call:
            service: svc-0-69
            size: 0B
        - call:
            service: svc-0-70
            size: 0B
        - call:
            service: svc-0-71
            size: 0B
        - call:
            service: svc-0-72
            size: 0B
        - call:
            service: svc-0-73
            size: 0B
        - call:
            service: svc-0-74
            size: 0B
        - call:
            service: svc-0-75
            size: 0B
        - call:
            service: svc-0-76
            size: 0B
        - call:
            service: svc-0-77
            size: 0B
        - call:
            service: svc-0-78
            size: 0B
        - call:
            service: svc-0-79
            size: 0B
        - call:
            service: svc-0-80
            size: 0B
        - call:
            service: svc-0-81
            size: 0B
        - call:
            service: svc-0-82
            size: 0B
        - call:
            service: svc-0-83
            size: 0B
        - call:
            service: svc-0-84
            size: 0B
        - call:
            service: svc-0-85
            size: 0B
        - call:
            service: svc-0-86
            size: 0B
        - call:
            service: svc-0-87
            size: 0B
        - call:
            service: svc-0-88
            size: 0B
        - call:
            service: svc-0-89
            size: 0B
        - call:
            service: svc-0-90
            size: 0B
        - call:
            service: svc-0-91
            size: 0B
        - call:
            service: svc-0-92
            size: 0B
        - call:
            service: svc-0-93
            size: 0B
        - call:
            service: svc-0-94
            size: 0B
        - call:
            service: svc-0-95
            size: 0B
        - call:
            service: svc-0-96
            size: 0B
        - call:
            service: svc-0-97
            size: 0B
        - call:
            service: svc-0-98
            size: 0B
        - call:
            service: svc-0-99
            size: 0B
      type: http
    - name: svc-0-0
      numReplicas: 2
      script:
      - - call:
            service: svc-0-0-0
            size: 0B
        - call:
            service: svc-0-0-1
            size: 0B
        - call:
            service: svc-0-0-2
            size: 0B
        - call:
            service: svc-0-0-3
            size: 0B
        - call:
            service: svc-0-0-4
            size: 0B
        - call:
            service: svc-0-0-5
            size: 0B
        - call:
            service: svc-0-0-6
            size: 0B
        - call:
            service: svc-0-0-7
            size: 0B
        - call:
            service: svc-0-0-8
            size: 0B
        - call:
            service: svc-0-0-9
            size: 0B
        - call:
            service: svc-0-0-10
            size: 0B
        - call:
            service: svc-0-0-11
            size: 0B
        - call:
            service: svc-0-0-12
            size: 0B
        - call:
            service: svc-0-0-13
            size: 0B
        - call:
            service: svc-0-0-14
            size: 0B
        - call:
            service: svc-0-0-15
            size: 0B
        - call:
            service: svc-0-0-16
            size: 0B
        - call:
            service: svc-0-0-17
            size: 0B
        - call:
            service: svc-0-0-18
            size: 0B
        - call:
            service: svc-0-0-19
            size: 0B
        - call:
            service: svc-0-0-20
            size: 0B
        - call:
            service: svc-0-0-21
            size: 0B
        - call:
            service: svc-0-0-22
            size: 0B
        - call:
            service: svc-0-0-23
            size: 0B
        - call:
            service: svc-0-0-24
            size: 0B
        - call:
            service: svc-0-0-25
            size: 0B
        - call:
            service: svc-0-0-26
            size: 0B
        - call:
            service: svc-0-0-27
            size: 0B
        - call:
            service: svc-0-0-28
            size: 0B
        - call:
            service: svc-0-0-29
            size: 0B
        - call:
            service: svc-0-0-30
            size: 0B
        - call:
            service: svc-0-0-31
            size: 0B
        - call:
            service: svc-0-0-32
            size: 0B
        - call:
            service: svc-0-0-33
            size: 0B
        - call:
            service: svc-0-0-34
            size: 0B
        - call:
            service: svc-0-0-35
            size: 0B
        - call:
            service: svc-0-0-36
            size: 0B
        - call:
            service: svc-0-0-37
            size: 0B
        - call:
            service: svc-0-0-38
            size: 0B
        - call:
            service: svc-0-0-39
            size: 0B
        - call:
            service: svc-0-0-40
            size: 0B
        - call:
            service: svc-0-0-41
            size: 0B
        - call:
            service: svc-0-0-42
            size: 0B
        - call:
            service: svc-0-0-43
            size: 0B
        - call:
            service: svc-0-0-44
            size: 0B
        - call:
            service: svc-0-0-45
            size: 0B
        - call:
            service: svc-0-0-46
            size: 0B
        - call:
            service: svc-0-0-47
            size: 0B
        - call:
            service: svc-0-0-48
            size: 0B
        - call:
            service: svc-0-0-49
            size: 0B
        - call:
            service: svc-0-0-50
            size: 0B
        - call:
            service: svc-0-0-51
            size: 0B
        - call:
            service: svc-0-0-52
            size: 0B
        - call:
            service: svc-0-0-53
            size: 0B
        - call:
            service: svc-0-0-54
            size: 0B
        - call:
            service: svc-0-0-55
            size: 0B
        - call:
            service: svc-0-0-56
            size: 0B
        - call:
            service: svc-0-0-57
            size: 0B
        - call:
            service: svc-0-0-58
            size: 0B
        - call:
            service: svc-0-0-59
            size: 0B
        - call:
            service: svc-0-0-60
            size: 0B
        - call:
            service: svc-0-0-61
            size: 0B
        - call:
            service: svc-0-0-62
            size: 0B
        - call:
            service: svc-0-0-63
            size: 0B
        - call:
            service: svc-0-0-64
            size: 0B
        - call:
            service: svc-0-0-65
            size: 0B
        - call:
            service: svc-0-0-66
            size: 0B
        - call:
            service: svc-0-0-67
            size: 0B
        - call:
            service: svc-0-0-68
            size: 0B
        - call:
            service: svc-0-0-69
            size: 0B
        - call:
            service: svc-0-0-70
            size: 0B
        - call:
            service: svc-0-0-71
            size: 0B
        - call:
            service: svc-0-0-72
            size: 0B
        - call:
            service: svc-0-0-73
            size: 0B
        - call:
            service: svc-0-0-74
            size: 0B
        - call:
            service: svc-0-0-75
            size: 0B
        - call:
            service: svc-0-0-76
            size: 0B
        - call:
            service: svc-0-0-77
            size: 0B
        - call:
            service: svc-0-0-78
            size: 0B
        - call:
            service: svc-0-0-79
            size: 0B
        - call:
            service: svc-0-0-80
            size: 0B
        - call:
            service: svc-0-0-81
            size: 0B
        - call:
            service: svc-0-0-82
            size: 0B
        - call:
            service: svc-0-0-83
            size: 0B
        - call:
            service: svc-0-0-84
            size: 0B
        - call:
            service: svc-0-0-85
            size: 0B
        - call:
            service: svc-0-0-86
            size: 0B
        - call:
            service: svc-0-0-87
            size: 0B
        - call:
            service: svc-0-0-88
            size: 0B
        - call:
            service: svc-0-0-89
            size: 0B
        - call:
            service: svc-0-0-90
            size: 0B
        - call:
            service: svc-0-0-91
            size: 0B
        - call:
            service: svc-0-0-92
            size: 0B
        - call:
            service: svc-0-0-93
            size: 0B
        - call:
            service: svc-0-0-94
            size: 0B
        - call:
            service: svc-0-0-95
            size: 0B
        - call:
            service: svc-0-0-96
            size: 0B
        - call:
            service: svc-0-0-97
            size: 0B
        - call:
            service: svc-0-0-98
            size: 0B
        - call:
            service: svc-0-0-99
            size: 0B
      type: http
    - name: svc-0-1
      numReplicas: 2
      script:
      - - call:
            service: svc-0-1-0
            size: 0B
        - call:
            service: svc-0-1-1
            size: 0B
        - call:
            service: svc-0-1-2
            size: 0B
        - call:
            service: svc-0-1-3
            size: 0B
        - call:
            service: svc-0-1-4
            size: 0B
        - call:
            service: svc-0-1-5
            size: 0B
        - call:
            service: svc-0-1-6
            size: 0B
        - call:
            service: svc-0-1-7
            size: 0B
        - call:
            service: svc-0-1-8
            size: 0B
        - call:
            service: svc-0-1-9
            size: 0B
        - call:
            service: svc-0-1-10
            size: 0B
        - call:
            service: svc-0-1-11
            size: 0B
        - call:
            service: svc-0-1-12
            size: 0B
        - call:
            service: svc-0-1-13
            size: 0B
        - call:
            service: svc-0-1-14
            size: 0B
        - call:
            service: svc-0-1-15
            size: 0B
        - call:
            service: svc-0-1-16
            size: 0B
        - call:
            service: svc-0-1-17
            size: 0B
        - call:
            service: svc-0-1-18
            size: 0B
        - call:
            service: svc-0-1-19
            size: 0B
        - call:
            service: svc-0-1-20
            size: 0B
        - call:
            service: svc-0-1-21
            size: 0B
        - call:
            service: svc-0-1-22
            size: 0B
        - call:
            service: svc-0-1-23
            size: 0B
        - call:
            service: svc-0-1-24
            size: 0B
        - call:
            service: svc-0-1-25
            size: 0B
        - call:
            service: svc-0-1-26
            size: 0B
        - call:
            service: svc-0-1-27
            size: 0B
        - call:
            service: svc-0-1-28
            size: 0B
        - call:
            service: svc-0-1-29
            size: 0B
        - call:
            service: svc-0-1-30
            size: 0B
        - call:
            service: svc-0-1-31
            size: 0B
        - call:
            service: svc-0-1-32
            size: 0B
        - call:
            service: svc-0-1-33
            size: 0B
        - call:
            service: svc-0-1-34
            size: 0B
        - call:
            service: svc-0-1-35
            size: 0B
        - call:
            service: svc-0-1-36
            size: 0B
        - call:
            service: svc-0-1-37
            size: 0B
        - call:
            service: svc-0-1-38
            size: 0B
        - call:
            service: svc-0-1-39
            size: 0B
        - call:
            service: svc-0-1-40
            size: 0B
        - call:
            service: svc-0-1-41
            size: 0B
        - call:
            service: svc-0-1-42
            size: 0B
        - call:
            service: svc-0-1-43
            size: 0B
        - call:
            service: svc-0-1-44
            size: 0B
        - call:
            service: svc-0-1-45
            size: 0B
        - call:
            service: svc-0-1-46
            size: 0B
        - call:
            service: svc-0-1-47
            size: 0B
        - call:
            service: svc-0-1-48
            size: 0B
        - call:
            service: svc-0-1-49
            size: 0B
        - call:
            service: svc-0-1-50
            size: 0B
        - call:
            service: svc-0-1-51
            size: 0B
        - call:
            service: svc-0-1-52
            size: 0B
        - call:
            service: svc-0-1-53
            size: 0B
        - call:
            service: svc-0-1-54
            size: 0B
        - call:
            service: svc-0-1-55
            size: 0B
        - call:
            service: svc-0-1-56
            size: 0B
        - call:
            service: svc-0-1-57
            size: 0B
        - call:
            service: svc-0-1-58
            size: 0B
        - call:
            service: svc-0-1-59
            size: 0B
        - call:
            service: svc-0-1-60
            size: 0B
        - call:
            service: svc-0-1-61
            size: 0B
        - call:
            service: svc-0-1-62
            size: 0B
        - call:
            service: svc-0-1-63
            size: 0B
        - call:
            service: svc-0-1-64
            size: 0B
        - call:
            service: svc-0-1-65
            size: 0B
        - call:
            service: svc-0-1-66
            size: 0B
        - call:
            service: svc-0-1-67
            size: 0B
        - call:
            service: svc-0-1-68
            size: 0B
        - call:
            service: svc-0-1-69
            size: 0B
        - call:
            service: svc-0-1-70
            size: 0B
        - call:
            service: svc-0-1-71
            size: 0B
        - call:
            service: svc-0-1-72
            size: 0B
        - call:
            service: svc-0-1-73
            size: 0B
        - call:
            service: svc-0-1-74
            size: 0B
        - call:
            service: svc-0-1-75
            size: 0B
        - call:
            service: svc-0-1-76
            size: 0B
        - call:
            service: svc-0-1-77
            size: 0B
        - call:
            service: svc-0-1-78
            size: 0B
        - call:
            service: svc-0-1-79
            size: 0B
        - call:
            service: svc-0-1-80
            size: 0B
        - call:
            service: svc-0-1-81
            size: 0B
        - call:
            service: svc-0-1-82
            size: 0B
        - call:
            service: svc-0-1-83
            size: 0B
        - call:
            service: svc-0-1-84
            size: 0B
        - call:
            service: svc-0-1-85
            size: 0B
        - call:
            service: svc-0-1-86
            size: 0B
        - call:
            service: svc-0-1-87
            size: 0B
        - call:
            service: svc-0-1-88
            size: 0B
        - call:
            service: svc-0-1-89
            size: 0B
        - call:
            service: svc-0-1-90
            size: 0B
        - call:
            service: svc-0-1-91
            size: 0B
        - call:
            service: svc-0-1-92
            size: 0B
        - call:
            service: svc-0-1-93
            size: 0B
        - call:
            service: svc-0-1-94
            size: 0B
        - call:
            service: svc-0-1-95
            size: 0B
        - call:
            service: svc-0-1-96
            size: 0B
        - call:
            service: svc-0-1-97
            size: 0B
        - call:
            service: svc-0-1-98
            size: 0B
        - call:
            service: svc-0-1-99
            size: 0B
      type: http
    - name: svc-0-2
      numReplicas: 2
      script:
      - - call:
            service: svc-0-2-0
            size: 0B
        - call:
            service: svc-0-2-1
            size: 0B
        - call:
            service: svc-0-2-2
            size: 0B
        - call:
            service: svc-0-2-3
            size: 0B
        - call:
            service: svc-0-2-4
            size: 0B
        - call:
            service: svc-0-2-5
            size: 0B
        - call:
            service: svc-0-2-6
            size: 0B
        - call:
            service: svc-0-2-7
            size: 0B
        - call:
            service: svc-0-2-8
            size: 0B
        - call:
            service: svc-0-2-9
            size: 0B
        - call:
            service: svc-0-2-10
            size: 0B
        - call:
            service: svc-0-2-11
            size: 0B
        - call:
            service: svc-0-2-12
            size: 0B
        - call:
            service: svc-0-2-13
            size: 0B
        - call:
            service: svc-0-2-14
            size: 0B
        - call:
            service: svc-0-2-15
            size: 0B
        - call:
            service: svc-0-2-16
            size: 0B
        - call:
            service: svc-0-2-17
            size: 0B
        - call:
            service: svc-0-2-18
            size: 0B
        - call:
            service: svc-0-2-19
            size: 0B
        - call:
            service: svc-0-2-20
            size: 0B
        - call:
            service: svc-0-2-21
            size: 0B
        - call:
            service: svc-0-2-22
            size: 0B
        - call:
            service: svc-0-2-23
            size: 0B
        - call:
            service: svc-0-2-24
            size: 0B
        - call:
            service: svc-0-2-25
            size: 0B
        - call:
            service: svc-0-2-26
            size: 0B
        - call:
            service: svc-0-2-27
            size: 0B
        - call:
            service: svc-0-2-28
            size: 0B
        - call:
            service: svc-0-2-29
            size: 0B
        - call:
            service: svc-0-2-30
            size: 0B
        - call:
            service: svc-0-2-31
            size: 0B
        - call:
            service: svc-0-2-32
            size: 0B
        - call:
            service: svc-0-2-33
            size: 0B
        - call:
            service: svc-0-2-34
            size: 0B
        - call:
            service: svc-0-2-35
            size: 0B
        - call:
            service: svc-0-2-36
            size: 0B
        - call:
            service: svc-0-2-37
            size: 0B
        - call:
            service: svc-0-2-38
            size: 0B
        - call:
            service: svc-0-2-39
            size: 0B
        - call:
            service: svc-0-2-40
            size: 0B
        - call:
            service: svc-0-2-41
            size: 0B
        - call:
            service: svc-0-2-42
            size: 0B
        - call:
            service: svc-0-2-43
            size: 0B
        - call:
            service: svc-0-2-44
            size: 0B
        - call:
            service: svc-0-2-45
            size: 0B
        - call:
            service: svc-0-2-46
            size: 0B
        - call:
            service: svc-0-2-47
            size: 0B
        - call:
            service: svc-0-2-48
            size: 0B
        - call:
            service: svc-0-2-49
            size: 0B
        - call:
            service: svc-0-2-50
            size: 0B
        - call:
            service: svc-0-2-51
            size: 0B
        - call:
            service: svc-0-2-52
            size: 0B
        - call:
            service: svc-0-2-53
            size: 0B
        - call:
            service: svc-0-2-54
            size: 0B
        - call:
            service: svc-0-2-55
            size: 0B
        - call:
            service: svc-0-2-56
            size: 0B
        - call:
            service: svc-0-2-57
            size: 0B
        - call:
            service: svc-0-2-58
            size: 0B
        - call:
            service: svc-0-2-59
            size: 0B
        - call:
            service: svc-0-2-60
            size: 0B
        - call:
            service: svc-0-2-61
            size: 0B
        - call:
            service: svc-0-2-62
            size: 0B
        - call:
            service: svc-0-2-63
            size: 0B
        - call:
            service: svc-0-2-64
            size: 0B
        - call:
            service: svc-0-2-65
            size: 0B
        - call:
            service: svc-0-2-66
            size: 0B
        - call:
            service: svc-0-2-67
            size: 0B
        - call:
            service: svc-0-2-68
            size: 0B
        - call:
            service: svc-0-2-69
            size: 0B
        - call:
            service: svc-0-2-70
            size: 0B
        - call:
            service: svc-0-2-71
            size: 0B
        - call:
            service: svc-0-2-72
            size: 0B
        - call:
            service: svc-0-2-73
            size: 0B
        - call:
            service: svc-0-2-74
            size: 0B
        - call:
            service: svc-0-2-75
            size: 0B
        - call:
            service: svc-0-2-76
            size: 0B
        - call:
            service: svc-0-2-77
            size: 0B
        - call:
            service: svc-0-2-78
            size: 0B
        - call:
            service: svc-0-2-79
            size: 0B
        - call:
            service: svc-0-2-80
            size: 0B
        - call:
            service: svc-0-2-81
            size: 0B
        - call:
            service: svc-0-2-82
            size: 0B
        - call:
            service: svc-0-2-83
            size: 0B
        - call:
            service: svc-0-2-84
            size: 0B
        - call:
            service: svc-0-2-85
            size: 0B
        - call:
            service: svc-0-2-86
            size: 0B
        - call:
            service: svc-0-2-87
            size: 0B
        - call:
            service: svc-0-2-88
            size: 0B
        - call:
            service: svc-0-2-89
            size: 0B
        - call:
            service: svc-0-2-90
            size: 0B
        - call:
            service: svc-0-2-91
            size: 0B
        - call:
            service: svc-0-2-92
            size: 0B
        - call:
            service: svc-0-2-93
            size: 0B
        - call:
            service: svc-0-2-94
            size: 0B
        - call:
            service: svc-0-2-95
            size: 0B
        - call:
            service: svc-0-2-96
            size: 0B
        - call:
            service: svc-0-2-97
            size: 0B
        - call:
            service: svc-0-2-98
            size: 0B
        - call:
            service: svc-0-2-99
            size: 0B
      type: http
    - name: svc-0-3
      numReplicas: 2
      script:
      - - call:
            service: svc-0-3-0
            size: 0B
        - call:
            service: svc-0-3-1
            size: 0B
        - call:
            service: svc-0-3-2
            size: 0B
        - call:
            service: svc-0-3-3
            size: 0B
        - call:
            service: svc-0-3-4
            size: 0B
        - call:
            service: svc-0-3-5
            size: 0B
        - call:
            service: svc-0-3-6
            size: 0B
        - call:
            service: svc-0-3-7
            size: 0B
        - call:
            service: svc-0-3-8
            size: 0B
        - call:
            service: svc-0-3-9
            size: 0B
        - call:
            service: svc-0-3-10
            size: 0B
        - call:
            service: svc-0-3-11
            size: 0B
        - call:
            service: svc-0-3-12
            size: 0B
        - call:
            service: svc-0-3-13
            size: 0B
        - call:
            service: svc-0-3-14
            size: 0B
        - call:
            service: svc-0-3-15
            size: 0B
        - call:
            service: svc-0-3-16
            size: 0B
        - call:
            service: svc-0-3-17
            size: 0B
        - call:
            service: svc-0-3-18
            size: 0B
        - call:
            service: svc-0-3-19
            size: 0B
        - call:
            service: svc-0-3-20
            size: 0B
        - call:
            service: svc-0-3-21
            size: 0B
        - call:
            service: svc-0-3-22
            size: 0B
        - call:
            service: svc-0-3-23
            size: 0B
        - call:
            service: svc-0-3-24
            size: 0B
        - call:
            service: svc-0-3-25
            size: 0B
        - call:
            service: svc-0-3-26
            size: 0B
        - call:
            service: svc-0-3-27
            size: 0B
        - call:
            service: svc-0-3-28
            size: 0B
        - call:
            service: svc-0-3-29
            size: 0B
        - call:
            service: svc-0-3-30
            size: 0B
        - call:
            service: svc-0-3-31
            size: 0B
        - call:
            service: svc-0-3-32
            size: 0B
        - call:
            service: svc-0-3-33
            size: 0B
        - call:
            service: svc-0-3-34
            size: 0B
        - call:
            service: svc-0-3-35
            size: 0B
        - call:
            service: svc-0-3-36
            size: 0B
        - call:
            service: svc-0-3-37
            size: 0B
        - call:
            service: svc-0-3-38
            size: 0B
        - call:
            service: svc-0-3-39
            size: 0B
        - call:
            service: svc-0-3-40
            size: 0B
        - call:
            service: svc-0-3-41
            size: 0B
        - call:
            service: svc-0-3-42
            size: 0B
        - call:
            service: svc-0-3-43
            size: 0B
        - call:
            service: svc-0-3-44
            size: 0B
        - call:
            service: svc-0-3-45
            size: 0B
        - call:
            service: svc-0-3-46
            size: 0B
        - call:
            service: svc-0-3-47
            size: 0B
        - call:
            service: svc-0-3-48
            size: 0B
        - call:
            service: svc-0-3-49
            size: 0B
        - call:
            service: svc-0-3-50
            size: 0B
        - call:
            service: svc-0-3-51
            size: 0B
        - call:
            service: svc-0-3-52
            size: 0B
        - call:
            service: svc-0-3-53
            size: 0B
        - call:
            service: svc-0-3-54
            size: 0B
        - call:
            service: svc-0-3-55
            size: 0B
        - call:
            service: svc-0-3-56
            size: 0B
        - call:
            service: svc-0-3-57
            size: 0B
        - call:
            service: svc-0-3-58
            size: 0B
        - call:
            service: svc-0-3-59
            size: 0B
        - call:
            service: svc-0-3-60
            size: 0B
        - call:
            service: svc-0-3-61
            size: 0B
        - call:
            service: svc-0-3-62
            size: 0B
        - call:
            service: svc-0-3-63
            size: 0B
        - call:
            service: svc-0-3-64
            size: 0B
        - call:
            service: svc-0-3-65
            size: 0B
        - call:
            service: svc-0-3-66
            size: 0B
        - call:
            service: svc-0-3-67
            size: 0B
        - call:
            service: svc-0-3-68
            size: 0B
        - call:
            service: svc-0-3-69
            size: 0B
        - call:
            service: svc-0-3-70
            size: 0B
        - call:
            service: svc-0-3-71
            size: 0B
        - call:
            service: svc-0-3-72
            size: 0B
        - call:
            service: svc-0-3-73
            size: 0B
        - call:
            service: svc-0-3-74
            size: 0B
        - call:
            service: svc-0-3-75
            size: 0B
        - call:
            service: svc-0-3-76
            size: 0B
        - call:
            service: svc-0-3-77
            size: 0B
        - call:
            service: svc-0-3-78
            size: 0B
        - call:
            service: svc-0-3-79
            size: 0B
        - call:
            service: svc-0-3-80
            size: 0B
        - call:
            service: svc-0-3-81
            size: 0B
        - call:
            service: svc-0-3-82
            size: 0B
        - call:
            service: svc-0-3-83
            size: 0B
        - call:
            service: svc-0-3-84
            size: 0B
        - call:
            service: svc-0-3-85
            size: 0B
        - call:
            service: svc-0-3-86
            size: 0B
        - call:
            service: svc-0-3-87
            size: 0B
        - call:
            service: svc-0-3-88
            size: 0B
        - call:
            service: svc-0-3-89
            size: 0B
        - call:
            service: svc-0-3-90
            size: 0B
        - call:
            service: svc-0-3-91
            size: 0B
        - call:
            service: svc-0-3-92
            size: 0B
        - call:
            service: svc-0-3-93
            size: 0B
        - call:
            service: svc-0-3-94
            size: 0B
        - call:
            service: svc-0-3-95
            size: 0B
        - call:
            service: svc-0-3-96
            size: 0B
        - call:
            service: svc-0-3-97
            size: 0B
        - call:
            service: svc-0-3-98
            size: 0B
        - call:
            service: svc-0-3-99
            size: 0B
      type: http
    - name: svc-0-4
      numReplicas: 2
      script:
      - - call:
            service: svc-0-4-0
            size: 0B
        - call:
            service: svc-0-4-1
            size: 0B
        - call:
            service: svc-0-4-2
            size: 0B
        - call:
            service: svc-0-4-3
            size: 0B
        - call:
            service: svc-0-4-4
            size: 0B
        - call:
            service: svc-0-4-5
            size: 0B
        - call:
            service: svc-0-4-6
            size: 0B
        - call:
            service: svc-0-4-7
            size: 0B
        - call:
            service: svc-0-4-8
            size: 0B
        - call:
            service: svc-0-4-9
            size: 0B
        - call:
            service: svc-0-4-10
            size: 0B
        - call:
            service: svc-0-4-11
            size: 0B
        - call:
            service: svc-0-4-12
            size: 0B
        - call:
            service: svc-0-4-13
            size: 0B
        - call:
            service: svc-0-4-14
            size: 0B
        - call:
            service: svc-0-4-15
            size: 0B
        - call:
            service: svc-0-4-16
            size: 0B
        - call:
            service: svc-0-4-17
            size: 0B
        - call:
            service: svc-0-4-18
            size: 0B
        - call:
            service: svc-0-4-19
            size: 0B
        - call:
            service: svc-0-4-20
            size: 0B
        - call:
            service: svc-0-4-21
            size: 0B
        - call:
            service: svc-0-4-22
            size: 0B
        - call:
            service: svc-0-4-23
            size: 0B
        - call:
            service: svc-0-4-24
            size: 0B
        - call:
            service: svc-0-4-25
            size: 0B
        - call:
            service: svc-0-4-26
            size: 0B
        - call:
            service: svc-0-4-27
            size: 0B
        - call:
            service: svc-0-4-28
            size: 0B
        - call:
            service: svc-0-4-29
            size: 0B
        - call:
            service: svc-0-4-30
            size: 0B
        - call:
            service: svc-0-4-31
            size: 0B
        - call:
            service: svc-0-4-32
            size: 0B
        - call:
            service: svc-0-4-33
            size: 0B
        - call:
            service: svc-0-4-34
            size: 0B
        - call:
            service: svc-0-4-35
            size: 0B
        - call:
            service: svc-0-4-36
            size: 0B
        - call:
            service: svc-0-4-37
            size: 0B
        - call:
            service: svc-0-4-38
            size: 0B
        - call:
            service: svc-0-4-39
            size: 0B
        - call:
            service: svc-0-4-40
            size: 0B
        - call:
            service: svc-0-4-41
            size: 0B
        - call:
            service: svc-0-4-42
            size: 0B
        - call:
            service: svc-0-4-43
            size: 0B
        - call:
            service: svc-0-4-44
            size: 0B
        - call:
            service: svc-0-4-45
            size: 0B
        - call:
            service: svc-0-4-46
            size: 0B
        - call:
            service: svc-0-4-47
            size: 0B
        - call:
            service: svc-0-4-48
            size: 0B
        - call:
            service: svc-0-4-49
            size: 0B
        - call:
            service: svc-0-4-50
            size: 0B
        - call:
            service: svc-0-4-51
            size: 0B
        - call:
            service: svc-0-4-52
            size: 0B
        - call:
            service: svc-0-4-53
            size: 0B
        - call:
            service: svc-0-4-54
            size: 0B
        - call:
            service: svc-0-4-55
            size: 0B
        - call:
            service: svc-0-4-56
            size: 0B
        - call:
            service: svc-0-4-57
            size: 0B
        - call:
            service: svc-0-4-58
            size: 0B
        - call:
            service: svc-0-4-59
            size: 0B
        - call:
            service: svc-0-4-60
            size: 0B
        - call:
            service: svc-0-4-61
            size: 0B
        - call:
            service: svc-0-4-62
            size: 0B
        - call:
            service: svc-0-4-63
            size: 0B
        - call:
            service: svc-0-4-64
            size: 0B
        - call:
            service: svc-0-4-65
            size: 0B
        - call:
            service: svc-0-4-66
            size: 0B
        - call:
            service: svc-0-4-67
            size: 0B
        - call:
            service: svc-0-4-68
            size: 0B
        - call:
            service: svc-0-4-69
            size: 0B
        - call:
            service: svc-0-4-70
            size: 0B
        - call:
            service: svc-0-4-71
            size: 0B
        - call:
            service: svc-0-4-72
            size: 0B
        - call:
            service: svc-0-4-73
            size: 0B
        - call:
            service: svc-0-4-74
            size: 0B
        - call:
            service: svc-0-4-75
            size: 0B
        - call:
            service: svc-0-4-76
            size: 0B
        - call:
            service: svc-0-4-77
            size: 0B
        - call:
            service: svc-0-4-78
            size: 0B
        - call:
            service: svc-0-4-79
            size: 0B
        - call:
            service: svc-0-4-80
            size: 0B
        - call:
            service: svc-0-4-81
            size: 0B
        - call:
            service: svc-0-4-82
            size: 0B
        - call:
            service: svc-0-4-83
            size: 0B
        - call:
            service: svc-0-4-84
            size: 0B
        - call:
            service: svc-0-4-85
            size: 0B
        - call:
            service: svc-0-4-86
            size: 0B
        - call:
            service: svc-0-4-87
            size: 0B
        - call:
            service: svc-0-4-88
            size: 0B
        - call:
            service: svc-0-4-89
            size: 0B
        - call:
            service: svc-0-4-90
            size: 0B
        - call:
            service: svc-0-4-91
            size: 0B
        - call:
            service: svc-0-4-92
            size: 0B
        - call:
            service: svc-0-4-93
            size: 0B
        - call:
            service: svc-0-4-94
            size: 0B
        - call:
            service: svc-0-4-95
            size: 0B
        - call:
            service: svc-0-4-96
            size: 0B
        - call:
            service: svc-0-4-97
            size: 0B
        - call:
            service: svc-0-4-98
            size: 0B
        - call:
            service: svc-0-4-99
            size: 0B
      type: http
    - name: svc-0-5
      numReplicas: 2
      script:
      - - call:
            service: svc-0-5-0
            size: 0B
        - call:
            service: svc-0-5-1
            size: 0B
        - call:
            service: svc-0-5-2
            size: 0B
        - call:
            service: svc-0-5-3
            size: 0B
        - call:
            service: svc-0-5-4
            size: 0B
        - call:
            service: svc-0-5-5
            size: 0B
        - call:
            service: svc-0-5-6
            size: 0B
        - call:
            service: svc-0-5-7
            size: 0B
        - call:
            service: svc-0-5-8
            size: 0B
        - call:
            service: svc-0-5-9
            size: 0B
        - call:
            service: svc-0-5-10
            size: 0B
        - call:
            service: svc-0-5-11
            size: 0B
        - call:
            service: svc-0-5-12
            size: 0B
        - call:
            service: svc-0-5-13
            size: 0B
        - call:
            service: svc-0-5-14
            size: 0B
        - call:
            service: svc-0-5-15
            size: 0B
        - call:
            service: svc-0-5-16
            size: 0B
        - call:
            service: svc-0-5-17
            size: 0B
        - call:
            service: svc-0-5-18
            size: 0B
        - call:
            service: svc-0-5-19
            size: 0B
        - call:
            service: svc-0-5-20
            size: 0B
        - call:
            service: svc-0-5-21
            size: 0B
        - call:
            service: svc-0-5-22
            size: 0B
        - call:
            service: svc-0-5-23
            size: 0B
        - call:
            service: svc-0-5-24
            size: 0B
        - call:
            service: svc-0-5-25
            size: 0B
        - call:
            service: svc-0-5-26
            size: 0B
        - call:
            service: svc-0-5-27
            size: 0B
        - call:
            service: svc-0-5-28
            size: 0B
        - call:
            service: svc-0-5-29
            size: 0B
        - call:
            service: svc-0-5-30
            size: 0B
        - call:
            service: svc-0-5-31
            size: 0B
        - call:
            service: svc-0-5-32
            size: 0B
        - call:
            service: svc-0-5-33
            size: 0B
        - call:
            service: svc-0-5-34
            size: 0B
        - call:
            service: svc-0-5-35
            size: 0B
        - call:
            service: svc-0-5-36
            size: 0B
        - call:
            service: svc-0-5-37
            size: 0B
        - call:
            service: svc-0-5-38
            size: 0B
        - call:
            service: svc-0-5-39
            size: 0B
        - call:
            service: svc-0-5-40
            size: 0B
        - call:
            service: svc-0-5-41
            size: 0B
        - call:
            service: svc-0-5-42
            size: 0B
        - call:
            service: svc-0-5-43
            size: 0B
        - call:
            service: svc-0-5-44
            size: 0B
        - call:
            service: svc-0-5-45
            size: 0B
        - call:
            service: svc-0-5-46
            size: 0B
        - call:
            service: svc-0-5-47
            size: 0B
        - call:
            service: svc-0-5-48
            size: 0B
        - call:
            service: svc-0-5-49
            size: 0B
        - call:
            service: svc-0-5-50
            size: 0B
        - call:
            service: svc-0-5-51
            size: 0B
        - call:
            service: svc-0-5-52
            size: 0B
        - call:
            service: svc-0-5-53
            size: 0B
        - call:
            service: svc-0-5-54
            size: 0B
        - call:
            service: svc-0-5-55
            size: 0B
        - call:
            service: svc-0-5-56
            size: 0B
        - call:
            service: svc-0-5-57
            size: 0B
        - call:
            service: svc-0-5-58
            size: 0B
        - call:
            service: svc-0-5-59
            size: 0B
        - call:
            service: svc-0-5-60
            size: 0B
        - call:
            service: svc-0-5-61
            size: 0B
        - call:
            service: svc-0-5-62
            size: 0B
        - call:
            service: svc-0-5-63
            size: 0B
        - call:
            service: svc-0-5-64
            size: 0B
        - call:
            service: svc-0-5-65
            size: 0B
        - call:
            service: svc-0-5-66
            size: 0B
        - call:
            service: svc-0-5-67
            size: 0B
        - call:
            service: svc-0-5-68
            size: 0B
        - call:
            service: svc-0-5-69
            size: 0B
        - call:
            service: svc-0-5-70
            size: 0B
        - call:
            service: svc-0-5-71
            size: 0B
        - call:
            service: svc-0-5-72
            size: 0B
        - call:
            service: svc-0-5-73
            size: 0B
        - call:
            service: svc-0-5-74
            size: 0B
        - call:
            service: svc-0-5-75
            size: 0B
        - call:
            service: svc-0-5-76
            size: 0B
        - call:
            service: svc-0-5-77
            size: 0B
        - call:
            service: svc-0-5-78
            size: 0B
        - call:
            service: svc-0-5-79
            size: 0B
        - call:
            service: svc-0-5-80
            size: 0B
        - call:
            service: svc-0-5-81
            size: 0B
        - call:
            service: svc-0-5-82
            size: 0B
        - call:
            service: svc-0-5-83
            size: 0B
        - call:
            service: svc-0-5-84
            size: 0B
        - call:
            service: svc-0-5-85
            size: 0B
        - call:
            service: svc-0-5-86
            size: 0B
        - call:
            service: svc-0-5-87
            size: 0B
        - call:
            service: svc-0-5-88
            size: 0B
        - call:
            service: svc-0-5-89
            size: 0B
        - call:
            service: svc-0-5-90
            size: 0B
        - call:
            service: svc-0-5-91
            size: 0B
        - call:
            service: svc-0-5-92
            size: 0B
        - call:
            service: svc-0-5-93
            size: 0B
        - call:
            service: svc-0-5-94
            size: 0B
        - call:
            service: svc-0-5-95
            size: 0B
        - call:
            service: svc-0-5-96
            size: 0B
        - call:
            service: svc-0-5-97
            size: 0B
        - call:
            service: svc-0-5-98
            size: 0B
        - call:
            service: svc-0-5-99
            size: 0B
      type: http
    - name: svc-0-6
      numReplicas: 2
      script:
      - - call:
            service: svc-0-6-0
            size: 0B
        - call:
            service: svc-0-6-1
            size: 0B
        - call:
            service: svc-0-6-2
            size: 0B
        - call:
            service: svc-0-6-3
            size: 0B
        - call:
            service: svc-0-6-4
            size: 0B
        - call:
            service: svc-0-6-5
            size: 0B
        - call:
            service: svc-0-6-6
            size: 0B
        - call:
            service: svc-0-6-7
            size: 0B
        - call:
            service: svc-0-6-8
            size: 0B
        - call:
            service: svc-0-6-9
            size: 0B
        - call:
            service: svc-0-6-10
            size: 0B
        - call:
            service: svc-0-6-11
            size: 0B
        - call:
            service: svc-0-6-12
            size: 0B
        - call:
            service: svc-0-6-13
            size: 0B
        - call:
            service: svc-0-6-14
            size: 0B
        - call:
            service: svc-0-6-15
            size: 0B
        - call:
            service: svc-0-6-16
            size: 0B
        - call:
            service: svc-0-6-17
            size: 0B
        - call:
            service: svc-0-6-18
            size: 0B
        - call:
            service: svc-0-6-19
            size: 0B
        - call:
            service: svc-0-6-20
            size: 0B
        - call:
            service: svc-0-6-21
            size: 0B
        - call:
            service: svc-0-6-22
            size: 0B
        - call:
            service: svc-0-6-23
            size: 0B
        - call:
            service: svc-0-6-24
            size: 0B
        - call:
            service: svc-0-6-25
            size: 0B
        - call:
            service: svc-0-6-26
            size: 0B
        - call:
            service: svc-0-6-27
            size: 0B
        - call:
            service: svc-0-6-28
            size: 0B
        - call:
            service: svc-0-6-29
            size: 0B
        - call:
            service: svc-0-6-30
            size: 0B
        - call:
            service: svc-0-6-31
            size: 0B
        - call:
            service: svc-0-6-32
            size: 0B
        - call:
            service: svc-0-6-33
            size: 0B
        - call:
            service: svc-0-6-34
            size: 0B
        - call:
            service: svc-0-6-35
            size: 0B
        - call:
            service: svc-0-6-36
            size: 0B
        - call:
            service: svc-0-6-37
            size: 0B
        - call:
            service: svc-0-6-38
            size: 0B
        - call:
            service: svc-0-6-39
            size: 0B
        - call:
            service: svc-0-6-40
            size: 0B
        - call:
            service: svc-0-6-41
            size: 0B
        - call:
            service: svc-0-6-42
            size: 0B
        - call:
            service: svc-0-6-43
            size: 0B
        - call:
            service: svc-0-6-44
            size: 0B
        - call:
            service: svc-0-6-45
            size: 0B
        - call:
            service: svc-0-6-46
            size: 0B
        - call:
            service: svc-0-6-47
            size: 0B
        - call:
            service: svc-0-6-48
            size: 0B
        - call:
            service: svc-0-6-49
            size: 0B
        - call:
            service: svc-0-6-50
            size: 0B
        - call:
            service: svc-0-6-51
            size: 0B
        - call:
            service: svc-0-6-52
            size: 0B
        - call:
            service: svc-0-6-53
            size: 0B
        - call:
            service: svc-0-6-54
            size: 0B
        - call:
            service: svc-0-6-55
            size: 0B
        - call:
            service: svc-0-6-56
            size: 0B
        - call:
            service: svc-0-6-57
            size: 0B
        - call:
            service: svc-0-6-58
            size: 0B
        - call:
            service: svc-0-6-59
            size: 0B
        - call:
            service: svc-0-6-60
            size: 0B
        - call:
            service: svc-0-6-61
            size: 0B
        - call:
            service: svc-0-6-62
            size: 0B
        - call:
            service: svc-0-6-63
            size: 0B
        - call:
            service: svc-0-6-64
            size: 0B
        - call:
            service: svc-0-6-65
            size: 0B
        - call:
            service: svc-0-6-66
            size: 0B
        - call:
            service: svc-0-6-67
            size: 0B
        - call:
            service: svc-0-6-68
            size: 0B
        - call:
            service: svc-0-6-69
            size: 0B
        - call:
            service: svc-0-6-70
            size: 0B
        - call:
            service: svc-0-6-71
            size: 0B
        - call:
            service: svc-0-6-72
            size: 0B
        - call:
            service: svc-0-6-73
            size: 0B
        - call:
            service: svc-0-6-74
            size: 0B
        - call:
            service: svc-0-6-75
            size: 0B
        - call:
            service: svc-0-6-76
            size: 0B
        - call:
            service: svc-0-6-77
            size: 0B
        - call:
            service: svc-0-6-78
            size: 0B
        - call:
            service: svc-0-6-79
            size: 0B
        - call:
            service: svc-0-6-80
            size: 0B
        - call:
            service: svc-0-6-81
            size: 0B
        - call:
            service: svc-0-6-82
            size: 0B
        - call:
            service: svc-0-6-83
            size: 0B
        - call:
            service: svc-0-6-84
            size: 0B
        - call:
            service: svc-0-6-85
            size: 0B
        - call:
            service: svc-0-6-86
            size: 0B
        - call:
            service: svc-0-6-87
            size: 0B
        - call:
            service: svc-0-6-88
            size: 0B
        - call:
            service: svc-0-6-89
            size: 0B
        - call:
            service: svc-0-6-90
            size: 0B
        - call:
            service: svc-0-6-91
            size: 0B
        - call:
            service: svc-0-6-92
            size: 0B
        - call:
            service: svc-0-6-93
            size: 0B
        - call:
            service: svc-0-6-94
            size: 0B
        - call:
            service: svc-0-6-95
            size: 0B
        - call:
            service: svc-0-6-96
            size: 0B
        - call:
            service: svc-0-6-97
            size: 0B
        - call:
            service: svc-0-6-98
            size: 0B
        - call:
            service: svc-0-6-99
            size: 0B
      type: http
    - name: svc-0-7
      numReplicas: 2
      script:
      - - call:
            service: svc-0-7-0
            size: 0B
        - call:
            service: svc-0-7-1
            size: 0B
        - call:
            service: svc-0-7-2
            size: 0B
        - call:
            service: svc-0-7-3
            size: 0B
        - call:
            service: svc-0-7-4
            size: 0B
        - call:
            service: svc-0-7-5
            size: 0B
        - call:
            service: svc-0-7-6
            size: 0B
        - call:
            service: svc-0-7-7
            size: 0B
        - call:
            service: svc-0-7-8
            size: 0B
        - call:
            service: svc-0-7-9
            size: 0B
        - call:
            service: svc-0-7-10
            size: 0B
        - call:
            service: svc-0-7-11
            size: 0B
        - call:
            service: svc-0-7-12
            size: 0B
        - call:
            service: svc-0-7-13
            size: 0B
        - call:
            service: svc-0-7-14
            size: 0B
        - call:
            service: svc-0-7-15
            size: 0B
        - call:
            service: svc-0-7-16
            size: 0B
        - call:
            service: svc-0-7-17
            size: 0B
        - call:
            service: svc-0-7-18
            size: 0B
        - call:
            service: svc-0-7-19
            size: 0B
        - call:
            service: svc-0-7-20
            size: 0B
        - call:
            service: svc-0-7-21
            size: 0B
        - call:
            service: svc-0-7-22
            size: 0B
        - call:
            service: svc-0-7-23
            size: 0B
        - call:
            service: svc-0-7-24
            size: 0B
        - call:
            service: svc-0-7-25
            size: 0B
        - call:
            service: svc-0-7-26
            size: 0B
        - call:
            service: svc-0-7-27
            size: 0B
        - call:
            service: svc-0-7-28
            size: 0B
        - call:
            service: svc-0-7-29
            size: 0B
        - call:
            service: svc-0-7-30
            size: 0B
        - call:
            service: svc-0-7-31
            size: 0B
        - call:
            service: svc-0-7-32
            size: 0B
        - call:
            service: svc-0-7-33
            size: 0B
        - call:
            service: svc-0-7-34
            size: 0B
        - call:
            service: svc-0-7-35
            size: 0B
        - call:
            service: svc-0-7-36
            size: 0B
        - call:
            service: svc-0-7-37
            size: 0B
        - call:
            service: svc-0-7-38
            size: 0B
        - call:
            service: svc-0-7-39
            size: 0B
        - call:
            service: svc-0-7-40
            size: 0B
        - call:
            service: svc-0-7-41
            size: 0B
        - call:
            service: svc-0-7-42
            size: 0B
        - call:
            service: svc-0-7-43
            size: 0B
        - call:
            service: svc-0-7-44
            size: 0B
        - call:
            service: svc-0-7-45
            size: 0B
        - call:
            service: svc-0-7-46
            size: 0B
        - call:
            service: svc-0-7-47
            size: 0B
        - call:
            service: svc-0-7-48
            size: 0B
        - call:
            service: svc-0-7-49
            size: 0B
        - call:
            service: svc-0-7-50
            size: 0B
        - call:
            service: svc-0-7-51
            size: 0B
        - call:
            service: svc-0-7-52
            size: 0B
        - call:
            service: svc-0-7-53
            size: 0B
        - call:
            service: svc-0-7-54
            size: 0B
        - call:
            service: svc-0-7-55
            size: 0B
        - call:
            service: svc-0-7-56
            size: 0B
        - call:
            service: svc-0-7-57
            size: 0B
        - call:
            service: svc-0-7-58
            size: 0B
        - call:
            service: svc-0-7-59
            size: 0B
        - call:
            service: svc-0-7-60
            size: 0B
        - call:
            service: svc-0-7-61
            size: 0B
        - call:
            service: svc-0-7-62
            size: 0B
        - call:
            service: svc-0-7-63
            size: 0B
        - call:
            service: svc-0-7-64
            size: 0B
        - call:
            service: svc-0-7-65
            size: 0B
        - call:
            service: svc-0-7-66
            size: 0B
        - call:
            service: svc-0-7-67
            size: 0B
        - call:
            service: svc-0-7-68
            size: 0B
        - call:
            service: svc-0-7-69
            size: 0B
        - call:
            service: svc-0-7-70
            size: 0B
        - call:
            service: svc-0-7-71
            size: 0B
        - call:
            service: svc-0-7-72
            size: 0B
        - call:
            service: svc-0-7-73
            size: 0B
        - call:
            service: svc-0-7-74
            size: 0B
        - call:
            service: svc-0-7-75
            size: 0B
        - call:
            service: svc-0-7-76
            size: 0B
        - call:
            service: svc-0-7-77
            size: 0B
        - call:
            service: svc-0-7-78
            size: 0B
        - call:
            service: svc-0-7-79
            size: 0B
        - call:
            service: svc-0-7-80
            size: 0B
        - call:
            service: svc-0-7-81
            size: 0B
        - call:
            service: svc-0-7-82
            size: 0B
        - call:
            service: svc-0-7-83
            size: 0B
        - call:
            service: svc-0-7-84
            size: 0B
        - call:
            service: svc-0-7-85
            size: 0B
        - call:
            service: svc-0-7-86
            size: 0B
        - call:
            service: svc-0-7-87
            size: 0B
        - call:
            service: svc-0-7-88
            size: 0B
        - call:
            service: svc-0-7-89
            size: 0B
        - call:
            service: svc-0-7-90
            size: 0B
        - call:
            service: svc-0-7-91
            size: 0B
        - call:
            service: svc-0-7-92
            size: 0B
        - call:
            service: svc-0-7-93
            size: 0B
        - call:
            service: svc-0-7-94
            size: 0B
        - call:
            service: svc-0-7-95
            size: 0B
        - call:
            service: svc-0-7-96
            size: 0B
        - call:
            service: svc-0-7-97
            size: 0B
        - call:
            service: svc-0-7-98
            size: 0B
        - call:
            service: svc-0-7-99
            size: 0B
      type: http
    - name: svc-0-8
      numReplicas: 2
      script:
      - - call:
            service: svc-0-8-0
            size: 0B
        - call:
            service: svc-0-8-1
            size: 0B
        - call:
            service: svc-0-8-2
            size: 0B
        - call:
            service: svc-0-8-3
            size: 0B
        - call:
            service: svc-0-8-4
            size: 0B
        - call:
            service: svc-0-8-5
            size: 0B
        - call:
            service: svc-0-8-6
            size: 0B
        - call:
            service: svc-0-8-7
            size: 0B
        - call:
            service: svc-0-8-8
            size: 0B
        - call:
            service: svc-0-8-9
            size: 0B
        - call:
            service: svc-0-8-10
            size: 0B
        - call:
            service: svc-0-8-11
            size: 0B
        - call:
            service: svc-0-8-12
            size: 0B
        - call:
            service: svc-0-8-13
            size: 0B
        - call:
            service: svc-0-8-14
            size: 0B
        - call:
            service: svc-0-8-15
            size: 0B
        - call:
            service: svc-0-8-16
            size: 0B
        - call:
            service: svc-0-8-17
            size: 0B
        - call:
            service: svc-0-8-18
            size: 0B
        - call:
            service: svc-0-8-19
            size: 0B
        - call:
            service: svc-0-8-20
            size: 0B
        - call:
            service: svc-0-8-21
            size: 0B
        - call:
            service: svc-0-8-22
            size: 0B
        - call:
            service: svc-0-8-23
            size: 0B
        - call:
            service: svc-0-8-24
            size: 0B
        - call:
            service: svc-0-8-25
            size: 0B
        - call:
            service: svc-0-8-26
            size: 0B
        - call:
            service: svc-0-8-27
            size: 0B
        - call:
            service: svc-0-8-28
            size: 0B
        - call:
            service: svc-0-8-29
            size: 0B
        - call:
            service: svc-0-8-30
            size: 0B
        - call:
            service: svc-0-8-31
            size: 0B
        - call:
            service: svc-0-8-32
            size: 0B
        - call:
            service: svc-0-8-33
            size: 0B
        - call:
            service: svc-0-8-34
            size: 0B
        - call:
            service: svc-0-8-35
            size: 0B
        - call:
            service: svc-0-8-36
            size: 0B
        - call:
            service: svc-0-8-37
            size: 0B
        - call:
            service: svc-0-8-38
            size: 0B
        - call:
            service: svc-0-8-39
            size: 0B
        - call:
            service: svc-0-8-40
            size: 0B
        - call:
            service: svc-0-8-41
            size: 0B
        - call:
            service: svc-0-8-42
            size: 0B
        - call:
            service: svc-0-8-43
            size: 0B
        - call:
            service: svc-0-8-44
            size: 0B
        - call:
            service: svc-0-8-45
            size: 0B
        - call:
            service: svc-0-8-46
            size: 0B
        - call:
            service: svc-0-8-47
            size: 0B
        - call:
            service: svc-0-8-48
            size: 0B
        - call:
            service: svc-0-8-49
            size: 0B
        - call:
            service: svc-0-8-50
            size: 0B
        - call:
            service: svc-0-8-51
            size: 0B
        - call:
            service: svc-0-8-52
            size: 0B
        - call:
            service: svc-0-8-53
            size: 0B
        - call:
            service: svc-0-8-54
            size: 0B
        - call:
            service: svc-0-8-55
            size: 0B
        - call:
            service: svc-0-8-56
            size: 0B
        - call:
            service: svc-0-8-57
            size: 0B
        - call:
            service: svc-0-8-58
            size: 0B
        - call:
            service: svc-0-8-59
            size: 0B
        - call:
            service: svc-0-8-60
            size: 0B
        - call:
            service: svc-0-8-61
            size: 0B
        - call:
            service: svc-0-8-62
            size: 0B
        - call:
            service: svc-0-8-63
            size: 0B
        - call:
            service: svc-0-8-64
            size: 0B
        - call:
            service: svc-0-8-65
            size: 0B
        - call:
            service: svc-0-8-66
            size: 0B
        - call:
            service: svc-0-8-67
            size: 0B
        - call:
            service: svc-0-8-68
            size: 0B
        - call:
            service: svc-0-8-69
            size: 0B
        - call:
            service: svc-0-8-70
            size: 0B
        - call:
            service: svc-0-8-71
            size: 0B
        - call:
            service: svc-0-8-72
            size: 0B
        - call:
            service: svc-0-8-73
            size: 0B
        - call:
            service: svc-0-8-74
            size: 0B
        - call:
            service: svc-0-8-75
            size: 0B
        - call:
            service: svc-0-8-76
            size: 0B
        - call:
            service: svc-0-8-77
            size: 0B
        - call:
            service: svc-0-8-78
            size: 0B
        - call:
            service: svc-0-8-79
            size: 0B
        - call:
            service: svc-0-8-80
            size: 0B
        - call:
            service: svc-0-8-81
            size: 0B
        - call:
            service: svc-0-8-82
            size: 0B
        - call:
            service: svc-0-8-83
            size: 0B
        - call:
            service: svc-0-8-84
            size: 0B
        - call:
            service: svc-0-8-85
            size: 0B
        - call:
            service: svc-0-8-86
            size: 0B
        - call:
            service: svc-0-8-87
            size: 0B
        - call:
            service: svc-0-8-88
            size: 0B
        - call:
            service: svc-0-8-89
            size: 0B
        - call:
            service: svc-0-8-90
            size: 0B
        - call:
            service: svc-0-8-91
            size: 0B
        - call:
            service: svc-0-8-92
            size: 0B
        - call:
            service: svc-0-8-93
            size: 0B
        - call:
            service: svc-0-8-94
            size: 0B
        - call:
            service: svc-0-8-95
            size: 0B
        - call:
            service: svc-0-8-96
            size: 0B
        - call:
            service: svc-0-8-97
            size: 0B
        - call:
            service: svc-0-8-98
            size: 0B
      type: http
    - name: svc-0-9
      numReplicas: 2
      type: http
    - name: svc-0-10
      numReplicas: 2
      type: http
    - name: svc-0-11
      numReplicas: 2
      type: http
    - name: svc-0-12
      numReplicas: 2
      type: http
    - name: svc-0-13
      numReplicas: 2
      type: http
    - name: svc-0-14
      numReplicas: 2
      type: http
    - name: svc-0-15
      numReplicas: 2
      type: http
    - name: svc-0-16
      numReplicas: 2
      type: http
    - name: svc-0-17
      numReplicas: 2
      type: http
    - name: svc-0-18
      numReplicas: 2
      type: http
    - name: svc-0-19
      numReplicas: 2
      type: http
    - name: svc-0-20
      numReplicas: 2
      type: http
    - name: svc-0-21
      numReplicas: 2
      type: http
    - name: svc-0-22
      numReplicas: 2
      type: http
    - name: svc-0-23
      numReplicas: 2
      type: http
    - name: svc-0-24
      numReplicas: 2
      type: http
    - name: svc-0-25
      numReplicas: 2
      type: http
    - name: svc-0-26
      numReplicas: 2
      type: http
    - name: svc-0-27
      numReplicas: 2
      type: http
    - name: svc-0-28
      numReplicas: 2
      type: http
    - name: svc-0-29
      numReplicas: 2
      type: http
    - name: svc-0-30
      numReplicas: 2
      type: http
    - name: svc-0-31
      numReplicas: 2
      type: http
    - name: svc-0-32
      numReplicas: 2
      type: http
    - name: svc-0-33
      numReplicas: 2
      type: http
    - name: svc-0-34
      numReplicas: 2
      type: http
    - name: svc-0-35
      numReplicas: 2
      type: http
    - name: svc-0-36
      numReplicas: 2
      type: http
    - name: svc-0-37
      numReplicas: 2
      type: http
    - name: svc-0-38
      numReplicas: 2
      type: http
    - name: svc-0-39
      numReplicas: 2
      type: http
    - name: svc-0-40
      numReplicas: 2
      type: http
    - name: svc-0-41
      numReplicas: 2
      type: http
    - name: svc-0-42
      numReplicas: 2
      type: http
    - name: svc-0-43
      numReplicas: 2
      type: http
    - name: svc-0-44
      numReplicas: 2
      type: http
    - name: svc-0-45
      numReplicas: 2
      type: http
    - name: svc-0-46
      numReplicas: 2
      type: http
    - name: svc-0-47
      numReplicas: 2
      type: http
    - name: svc-0-48
      numReplicas: 2
      type: http
    - name: svc-0-49
      numReplicas: 2
      type: http
    - name: svc-0-50
      numReplicas: 2
      type: http
    - name: svc-0-51
      numReplicas: 2
      type: http
    - name: svc-0-52
      numReplicas: 2
      type: http
    - name: svc-0-53
      numReplicas: 2
      type: http
    - name: svc-0-54
      numReplicas: 2
      type: http
    - name: svc-0-55
      numReplicas: 2
      type: http
    - name: svc-0-56
      numReplicas: 2
      type: http
    - name: svc-0-57
      numReplicas: 2
      type: http
    - name: svc-0-58
      numReplicas: 2
      type: http
    - name: svc-0-59
      numReplicas: 2
      type: http
    - name: svc-0-60
      numReplicas: 2
      type: http
    - name: svc-0-61
      numReplicas: 2
      type: http
    - name: svc-0-62
      numReplicas: 2
      type: http
    - name: svc-0-63
      numReplicas: 2
      type: http
    - name: svc-0-64
      numReplicas: 2
      type: http
    - name: svc-0-65
      numReplicas: 2
      type: http
    - name: svc-0-66
      numReplicas: 2
      type: http
    - name: svc-0-67
      numReplicas: 2
      type: http
    - name: svc-0-68
      numReplicas: 2
      type: http
    - name: svc-0-69
      numReplicas: 2
      type: http
    - name: svc-0-70
      numReplicas: 2
      type: http
    - name: svc-0-71
      numReplicas: 2
      type: http
    - name: svc-0-72
      numReplicas: 2
      type: http
    - name: svc-0-73
      numReplicas: 2
      type: http
    - name: svc-0-74
      numReplicas: 2
      type: http
    - name: svc-0-75
      numReplicas: 2
      type: http
    - name: svc-0-76
      numReplicas: 2
      type: http
    - name: svc-0-77
      numReplicas: 2
      type: http
    - name: svc-0-78
      numReplicas: 2
      type: http
    - name: svc-0-79
      numReplicas: 2
      type: http
    - name: svc-0-80
      numReplicas: 2
      type: http
    - name: svc-0-81
      numReplicas: 2
      type: http
    - name: svc-0-82
      numReplicas: 2
      type: http
    - name: svc-0-83
      numReplicas: 2
      type: http
    - name: svc-0-84
      numReplicas: 2
      type: http
    - name: svc-0-85
      numReplicas: 2
      type: http
    - name: svc-0-86
      numReplicas: 2
      type: http
    - name: svc-0-87
      numReplicas: 2
      type: http
    - name: svc-0-88
      numReplicas: 2
      type: http
    - name: svc-0-89
      numReplicas: 2
      type: http
    - name: svc-0-90
      numReplicas: 2
      type: http
    - name: svc-0-91
      numReplicas: 2
      type: http
    - name: svc-0-92
      numReplicas: 2
      type: http
    - name: svc-0-93
      numReplicas: 2
      type: http
    - name: svc-0-94
      numReplicas: 2
      type: http
    - name: svc-0-95
      numReplicas: 2
      type: http
    - name: svc-0-96
      numReplicas: 2
      type: http
    - name: svc-0-97
      numReplicas: 2
      type: http
    - name: svc-0-98
      numReplicas: 2
      type: http
    - name: svc-0-99
      numReplicas: 2
      type: http
    - name: svc-0-0-0
      numReplicas: 2
      type: http
    - name: svc-0-0-1
      numReplicas: 2
      type: http
    - name: svc-0-0-2
      numReplicas: 2
      type: http
    - name: svc-0-0-3
      numReplicas: 2
      type: http
    - name: svc-0-0-4
      numReplicas: 2
      type: http
    - name: svc-0-0-5
      numReplicas: 2
      type: http
    - name: svc-0-0-6
      numReplicas: 2
      type: http
    - name: svc-0-0-7
      numReplicas: 2
      type: http
    - name: svc-0-0-8
      numReplicas: 2
      type: http
    - name: svc-0-0-9
      numReplicas: 2
      type: http
    - name: svc-0-0-10
      numReplicas: 2
      type: http
    - name: svc-0-0-11
      numReplicas: 2
      type: http
    - name: svc-0-0-12
      numReplicas: 2
      type: http
    - name: svc-0-0-13
      numReplicas: 2
      type: http
    - name: svc-0-0-14
      numReplicas: 2
      type: http
    - name: svc-0-0-15
      numReplicas: 2
      type: http
    - name: svc-0-0-16
      numReplicas: 2
      type: http
    - name: svc-0-0-17
      numReplicas: 2
      type: http
    - name: svc-0-0-18
      numReplicas: 2
      type: http
    - name: svc-0-0-19
      numReplicas: 2
      type: http
    - name: svc-0-0-20
      numReplicas: 2
      type: http
    - name: svc-0-0-21
      numReplicas: 2
      type: http
    - name: svc-0-0-22
      numReplicas: 2
      type: http
    - name: svc-0-0-23
      numReplicas: 2
      type: http
    - name: svc-0-0-24
      numReplicas: 2
      type: http
    - name: svc-0-0-25
      numReplicas: 2
      type: http
    - name: svc-0-0-26
      numReplicas: 2
      type: http
    - name: svc-0-0-27
      numReplicas: 2
      type: http
    - name: svc-0-0-28
      numReplicas: 2
      type: http
    - name: svc-0-0-29
      numReplicas: 2
      type: http
    - name: svc-0-0-30
      numReplicas: 2
      type: http
    - name: svc-0-0-31
      numReplicas: 2
      type: http
    - name: svc-0-0-32
      numReplicas: 2
      type: http
    - name: svc-0-0-33
      numReplicas: 2
      type: http
    - name: svc-0-0-34
      numReplicas: 2
      type: http
    - name: svc-0-0-35
      numReplicas: 2
      type: http
    - name: svc-0-0-36
      numReplicas: 2
      type: http
    - name: svc-0-0-37
      numReplicas: 2
      type: http
    - name: svc-0-0-38
      numReplicas: 2
      type: http
    - name: svc-0-0-39
      numReplicas: 2
      type: http
    - name: svc-0-0-40
      numReplicas: 2
      type: http
    - name: svc-0-0-41
      numReplicas: 2
      type: http
    - name: svc-0-0-42
      numReplicas: 2
      type: http
    - name: svc-0-0-43
      numReplicas: 2
      type: http
    - name: svc-0-0-44
      numReplicas: 2
      type: http
    - name: svc-0-0-45
      numReplicas: 2
      type: http
    - name: svc-0-0-46
      numReplicas: 2
      type: http
    - name: svc-0-0-47
      numReplicas: 2
      type: http
    - name: svc-0-0-48
      numReplicas: 2
      type: http
    - name: svc-0-0-49
      numReplicas: 2
      type: http
    - name: svc-0-0-50
      numReplicas: 2
      type: http
    - name: svc-0-0-51
      numReplicas: 2
      type: http
    - name: svc-0-0-52
      numReplicas: 2
      type: http
    - name: svc-0-0-53
      numReplicas: 2
      type: http
    - name: svc-0-0-54
      numReplicas: 2
      type: http
    - name: svc-0-0-55
      numReplicas: 2
      type: http
    - name: svc-0-0-56
      numReplicas: 2
      type: http
    - name: svc-0-0-57
      numReplicas: 2
      type: http
    - name: svc-0-0-58
      numReplicas: 2
      type: http
    - name: svc-0-0-59
      numReplicas: 2
      type: http
    - name: svc-0-0-60
      numReplicas: 2
      type: http
    - name: svc-0-0-61
      numReplicas: 2
      type: http
    - name: svc-0-0-62
      numReplicas: 2
      type: http
    - name: svc-0-0-63
      numReplicas: 2
      type: http
    - name: svc-0-0-64
      numReplicas: 2
      type: http
    - name: svc-0-0-65
      numReplicas: 2
      type: http
    - name: svc-0-0-66
      numReplicas: 2
      type: http
    - name: svc-0-0-67
      numReplicas: 2
      type: http
    - name: svc-0-0-68
      numReplicas: 2
      type: http
    - name: svc-0-0-69
      numReplicas: 2
      type: http
    - name: svc-0-0-70
      numReplicas: 2
      type: http
    - name: svc-0-0-71
      numReplicas: 2
      type: http
    - name: svc-0-0-72
      numReplicas: 2
      type: http
    - name: svc-0-0-73
      numReplicas: 2
      type: http
    - name: svc-0-0-74
      numReplicas: 2
      type: http
    - name: svc-0-0-75
      numReplicas: 2
      type: http
    - name: svc-0-0-76
      numReplicas: 2
      type: http
    - name: svc-0-0-77
      numReplicas: 2
      type: http
    - name: svc-0-0-78
      numReplicas: 2
      type: http
    - name: svc-0-0-79
      numReplicas: 2
      type: http
    - name: svc-0-0-80
      numReplicas: 2
      type: http
    - name: svc-0-0-81
      numReplicas: 2
      type: http
    - name: svc-0-0-82
      numReplicas: 2
      type: http
    - name: svc-0-0-83
      numReplicas: 2
      type: http
    - name: svc-0-0-84
      numReplicas: 2
      type: http
    - name: svc-0-0-85
      numReplicas: 2
      type: http
    - name: svc-0-0-86
      numReplicas: 2
      type: http
    - name: svc-0-0-87
      numReplicas: 2
      type: http
    - name: svc-0-0-88
      numReplicas: 2
      type: http
    - name: svc-0-0-89
      numReplicas: 2
      type: http
    - name: svc-0-0-90
      numReplicas: 2
      type: http
    - name: svc-0-0-91
      numReplicas: 2
      type: http
    - name: svc-0-0-92
      numReplicas: 2
      type: http
    - name: svc-0-0-93
      numReplicas: 2
      type: http
    - name: svc-0-0-94
      numReplicas: 2
      type: http
    - name: svc-0-0-95
      numReplicas: 2
      type: http
    - name: svc-0-0-96
      numReplicas: 2
      type: http
    - name: svc-0-0-97
      numReplicas: 2
      type: http
    - name: svc-0-0-98
      numReplicas: 2
      type: http
    - name: svc-0-0-99
      numReplicas: 2
      type: http
    - name: svc-0-1-0
      numReplicas: 2
      type: http
    - name: svc-0-1-1
      numReplicas: 2
      type: http
    - name: svc-0-1-2
      numReplicas: 2
      type: http
    - name: svc-0-1-3
      numReplicas: 2
      type: http
    - name: svc-0-1-4
      numReplicas: 2
      type: http
    - name: svc-0-1-5
      numReplicas: 2
      type: http
    - name: svc-0-1-6
      numReplicas: 2
      type: http
    - name: svc-0-1-7
      numReplicas: 2
      type: http
    - name: svc-0-1-8
      numReplicas: 2
      type: http
    - name: svc-0-1-9
      numReplicas: 2
      type: http
    - name: svc-0-1-10
      numReplicas: 2
      type: http
    - name: svc-0-1-11
      numReplicas: 2
      type: http
    - name: svc-0-1-12
      numReplicas: 2
      type: http
    - name: svc-0-1-13
      numReplicas: 2
      type: http
    - name: svc-0-1-14
      numReplicas: 2
      type: http
    - name: svc-0-1-15
      numReplicas: 2
      type: http
    - name: svc-0-1-16
      numReplicas: 2
      type: http
    - name: svc-0-1-17
      numReplicas: 2
      type: http
    - name: svc-0-1-18
      numReplicas: 2
      type: http
    - name: svc-0-1-19
      numReplicas: 2
      type: http
    - name: svc-0-1-20
      numReplicas: 2
      type: http
    - name: svc-0-1-21
      numReplicas: 2
      type: http
    - name: svc-0-1-22
      numReplicas: 2
      type: http
    - name: svc-0-1-23
      numReplicas: 2
      type: http
    - name: svc-0-1-24
      numReplicas: 2
      type: http
    - name: svc-0-1-25
      numReplicas: 2
      type: http
    - name: svc-0-1-26
      numReplicas: 2
      type: http
    - name: svc-0-1-27
      numReplicas: 2
      type: http
    - name: svc-0-1-28
      numReplicas: 2
      type: http
    - name: svc-0-1-29
      numReplicas: 2
      type: http
    - name: svc-0-1-30
      numReplicas: 2
      type: http
    - name: svc-0-1-31
      numReplicas: 2
      type: http
    - name: svc-0-1-32
      numReplicas: 2
      type: http
    - name: svc-0-1-33
      numReplicas: 2
      type: http
    - name: svc-0-1-34
      numReplicas: 2
      type: http
    - name: svc-0-1-35
      numReplicas: 2
      type: http
    - name: svc-0-1-36
      numReplicas: 2
      type: http
    - name: svc-0-1-37
      numReplicas: 2
      type: http
    - name: svc-0-1-38
      numReplicas: 2
      type: http
    - name: svc-0-1-39
      numReplicas: 2
      type: http
    - name: svc-0-1-40
      numReplicas: 2
      type: http
    - name: svc-0-1-41
      numReplicas: 2
      type: http
    - name: svc-0-1-42
      numReplicas: 2
      type: http
    - name: svc-0-1-43
      numReplicas: 2
      type: http
    - name: svc-0-1-44
      numReplicas: 2
      type: http
    - name: svc-0-1-45
      numReplicas: 2
      type: http
    - name: svc-0-1-46
      numReplicas: 2
      type: http
    - name: svc-0-1-47
      numReplicas: 2
      type: http
    - name: svc-0-1-48
      numReplicas: 2
      type: http
    - name: svc-0-1-49
      numReplicas: 2
      type: http
    - name: svc-0-1-50
      numReplicas: 2
      type: http
    - name: svc-0-1-51
      numReplicas: 2
      type: http
    - name: svc-0-1-52
      numReplicas: 2
      type: http
    - name: svc-0-1-53
      numReplicas: 2
      type: http
    - name: svc-0-1-54
      numReplicas: 2
      type: http
    - name: svc-0-1-55
      numReplicas: 2
      type: http
    - name: svc-0-1-56
      numReplicas: 2
      type: http
    - name: svc-0-1-57
      numReplicas: 2
      type: http
    - name: svc-0-1-58
      numReplicas: 2
      type: http
    - name: svc-0-1-59
      numReplicas: 2
      type: http
    - name: svc-0-1-60
      numReplicas: 2
      type: http
    - name: svc-0-1-61
      numReplicas: 2
      type: http
    - name: svc-0-1-62
      numReplicas: 2
      type: http
    - name: svc-0-1-63
      numReplicas: 2
      type: http
    - name: svc-0-1-64
      numReplicas: 2
      type: http
    - name: svc-0-1-65
      numReplicas: 2
      type: http
    - name: svc-0-1-66
      numReplicas: 2
      type: http
    - name: svc-0-1-67
      numReplicas: 2
      type: http
    - name: svc-0-1-68
      numReplicas: 2
      type: http
    - name: svc-0-1-69
      numReplicas: 2
      type: http
    - name: svc-0-1-70
      numReplicas: 2
      type: http
    - name: svc-0-1-71
      numReplicas: 2
      type: http
    - name: svc-0-1-72
      numReplicas: 2
      type: http
    - name: svc-0-1-73
      numReplicas: 2
      type: http
    - name: svc-0-1-74
      numReplicas: 2
      type: http
    - name: svc-0-1-75
      numReplicas: 2
      type: http
    - name: svc-0-1-76
      numReplicas: 2
      type: http
    - name: svc-0-1-77
      numReplicas: 2
      type: http
    - name: svc-0-1-78
      numReplicas: 2
      type: http
    - name: svc-0-1-79
      numReplicas: 2
      type: http
    - name: svc-0-1-80
      numReplicas: 2
      type: http
    - name: svc-0-1-81
      numReplicas: 2
      type: http
    - name: svc-0-1-82
      numReplicas: 2
      type: http
    - name: svc-0-1-83
      numReplicas: 2
      type: http
    - name: svc-0-1-84
      numReplicas: 2
      type: http
    - name: svc-0-1-85
      numReplicas: 2
      type: http
    - name: svc-0-1-86
      numReplicas: 2
      type: http
    - name: svc-0-1-87
      numReplicas: 2
      type: http
    - name: svc-0-1-88
      numReplicas: 2
      type: http
    - name: svc-0-1-89
      numReplicas: 2
      type: http
    - name: svc-0-1-90
      numReplicas: 2
      type: http
    - name: svc-0-1-91
      numReplicas: 2
      type: http
    - name: svc-0-1-92
      numReplicas: 2
      type: http
    - name: svc-0-1-93
      numReplicas: 2
      type: http
    - name: svc-0-1-94
      numReplicas: 2
      type: http
    - name: svc-0-1-95
      numReplicas: 2
      type: http
    - name: svc-0-1-96
      numReplicas: 2
      type: http
    - name: svc-0-1-97
      numReplicas: 2
      type: http
    - name: svc-0-1-98
      numReplicas: 2
      type: http
    - name: svc-0-1-99
      numReplicas: 2
      type: http
    - name: svc-0-2-0
      numReplicas: 2
      type: http
    - name: svc-0-2-1
      numReplicas: 2
      type: http
    - name: svc-0-2-2
      numReplicas: 2
      type: http
    - name: svc-0-2-3
      numReplicas: 2
      type: http
    - name: svc-0-2-4
      numReplicas: 2
      type: http
    - name: svc-0-2-5
      numReplicas: 2
      type: http
    - name: svc-0-2-6
      numReplicas: 2
      type: http
    - name: svc-0-2-7
      numReplicas: 2
      type: http
    - name: svc-0-2-8
      numReplicas: 2
      type: http
    - name: svc-0-2-9
      numReplicas: 2
      type: http
    - name: svc-0-2-10
      numReplicas: 2
      type: http
    - name: svc-0-2-11
      numReplicas: 2
      type: http
    - name: svc-0-2-12
      numReplicas: 2
      type: http
    - name: svc-0-2-13
      numReplicas: 2
      type: http
    - name: svc-0-2-14
      numReplicas: 2
      type: http
    - name: svc-0-2-15
      numReplicas: 2
      type: http
    - name: svc-0-2-16
      numReplicas: 2
      type: http
    - name: svc-0-2-17
      numReplicas: 2
      type: http
    - name: svc-0-2-18
      numReplicas: 2
      type: http
    - name: svc-0-2-19
      numReplicas: 2
      type: http
    - name: svc-0-2-20
      numReplicas: 2
      type: http
    - name: svc-0-2-21
      numReplicas: 2
      type: http
    - name: svc-0-2-22
      numReplicas: 2
      type: http
    - name: svc-0-2-23
      numReplicas: 2
      type: http
    - name: svc-0-2-24
      numReplicas: 2
      type: http
    - name: svc-0-2-25
      numReplicas: 2
      type: http
    - name: svc-0-2-26
      numReplicas: 2
      type: http
    - name: svc-0-2-27
      numReplicas: 2
      type: http
    - name: svc-0-2-28
      numReplicas: 2
      type: http
    - name: svc-0-2-29
      numReplicas: 2
      type: http
    - name: svc-0-2-30
      numReplicas: 2
      type: http
    - name: svc-0-2-31
      numReplicas: 2
      type: http
    - name: svc-0-2-32
      numReplicas: 2
      type: http
    - name: svc-0-2-33
      numReplicas: 2
      type: http
    - name: svc-0-2-34
      numReplicas: 2
      type: http
    - name: svc-0-2-35
      numReplicas: 2
      type: http
    - name: svc-0-2-36
      numReplicas: 2
      type: http
    - name: svc-0-2-37
      numReplicas: 2
      type: http
    - name: svc-0-2-38
      numReplicas: 2
      type: http
    - name: svc-0-2-39
      numReplicas: 2
      type: http
    - name: svc-0-2-40
      numReplicas: 2
      type: http
    - name: svc-0-2-41
      numReplicas: 2
      type: http
    - name: svc-0-2-42
      numReplicas: 2
      type: http
    - name: svc-0-2-43
      numReplicas: 2
      type: http
    - name: svc-0-2-44
      numReplicas: 2
      type: http
    - name: svc-0-2-45
      numReplicas: 2
      type: http
    - name: svc-0-2-46
      numReplicas: 2
      type: http
    - name: svc-0-2-47
      numReplicas: 2
      type: http
    - name: svc-0-2-48
      numReplicas: 2
      type: http
    - name: svc-0-2-49
      numReplicas: 2
      type: http
    - name: svc-0-2-50
      numReplicas: 2
      type: http
    - name: svc-0-2-51
      numReplicas: 2
      type: http
    - name: svc-0-2-52
      numReplicas: 2
      type: http
    - name: svc-0-2-53
      numReplicas: 2
      type: http
    - name: svc-0-2-54
      numReplicas: 2
      type: http
    - name: svc-0-2-55
      numReplicas: 2
      type: http
    - name: svc-0-2-56
      numReplicas: 2
      type: http
    - name: svc-0-2-57
      numReplicas: 2
      type: http
    - name: svc-0-2-58
      numReplicas: 2
      type: http
    - name: svc-0-2-59
      numReplicas: 2
      type: http
    - name: svc-0-2-60
      numReplicas: 2
      type: http
    - name: svc-0-2-61
      numReplicas: 2
      type: http
    - name: svc-0-2-62
      numReplicas: 2
      type: http
    - name: svc-0-2-63
      numReplicas: 2
      type: http
    - name: svc-0-2-64
      numReplicas: 2
      type: http
    - name: svc-0-2-65
      numReplicas: 2
      type: http
    - name: svc-0-2-66
      numReplicas: 2
      type: http
    - name: svc-0-2-67
      numReplicas: 2
      type: http
    - name: svc-0-2-68
      numReplicas: 2
      type: http
    - name: svc-0-2-69
      numReplicas: 2
      type: http
    - name: svc-0-2-70
      numReplicas: 2
      type: http
    - name: svc-0-2-71
      numReplicas: 2
      type: http
    - name: svc-0-2-72
      numReplicas: 2
      type: http
    - name: svc-0-2-73
      numReplicas: 2
      type: http
    - name: svc-0-2-74
      numReplicas: 2
      type: http
    - name: svc-0-2-75
      numReplicas: 2
      type: http
    - name: svc-0-2-76
      numReplicas: 2
      type: http
    - name: svc-0-2-77
      numReplicas: 2
      type: http
    - name: svc-0-2-78
      numReplicas: 2
      type: http
    - name: svc-0-2-79
      numReplicas: 2
      type: http
    - name: svc-0-2-80
      numReplicas: 2
      type: http
    - name: svc-0-2-81
      numReplicas: 2
      type: http
    - name: svc-0-2-82
      numReplicas: 2
      type: http
    - name: svc-0-2-83
      numReplicas: 2
      type: http
    - name: svc-0-2-84
      numReplicas: 2
      type: http
    - name: svc-0-2-85
      numReplicas: 2
      type: http
    - name: svc-0-2-86
      numReplicas: 2
      type: http
    - name: svc-0-2-87
      numReplicas: 2
      type: http
    - name: svc-0-2-88
      numReplicas: 2
      type: http
    - name: svc-0-2-89
      numReplicas: 2
      type: http
    - name: svc-0-2-90
      numReplicas: 2
      type: http
    - name: svc-0-2-91
      numReplicas: 2
      type: http
    - name: svc-0-2-92
      numReplicas: 2
      type: http
    - name: svc-0-2-93
      numReplicas: 2
      type: http
    - name: svc-0-2-94
      numReplicas: 2
      type: http
    - name: svc-0-2-95
      numReplicas: 2
      type: http
    - name: svc-0-2-96
      numReplicas: 2
      type: http
    - name: svc-0-2-97
      numReplicas: 2
      type: http
    - name: svc-0-2-98
      numReplicas: 2
      type: http
    - name: svc-0-2-99
      numReplicas: 2
      type: http
    - name: svc-0-3-0
      numReplicas: 2
      type: http
    - name: svc-0-3-1
      numReplicas: 2
      type: http
    - name: svc-0-3-2
      numReplicas: 2
      type: http
    - name: svc-0-3-3
      numReplicas: 2
      type: http
    - name: svc-0-3-4
      numReplicas: 2
      type: http
    - name: svc-0-3-5
      numReplicas: 2
      type: http
    - name: svc-0-3-6
      numReplicas: 2
      type: http
    - name: svc-0-3-7
      numReplicas: 2
      type: http
    - name: svc-0-3-8
      numReplicas: 2
      type: http
    - name: svc-0-3-9
      numReplicas: 2
      type: http
    - name: svc-0-3-10
      numReplicas: 2
      type: http
    - name: svc-0-3-11
      numReplicas: 2
      type: http
    - name: svc-0-3-12
      numReplicas: 2
      type: http
    - name: svc-0-3-13
      numReplicas: 2
      type: http
    - name: svc-0-3-14
      numReplicas: 2
      type: http
    - name: svc-0-3-15
      numReplicas: 2
      type: http
    - name: svc-0-3-16
      numReplicas: 2
      type: http
    - name: svc-0-3-17
      numReplicas: 2
      type: http
    - name: svc-0-3-18
      numReplicas: 2
      type: http
    - name: svc-0-3-19
      numReplicas: 2
      type: http
    - name: svc-0-3-20
      numReplicas: 2
      type: http
    - name: svc-0-3-21
      numReplicas: 2
      type: http
    - name: svc-0-3-22
      numReplicas: 2
      type: http
    - name: svc-0-3-23
      numReplicas: 2
      type: http
    - name: svc-0-3-24
      numReplicas: 2
      type: http
    - name: svc-0-3-25
      numReplicas: 2
      type: http
    - name: svc-0-3-26
      numReplicas: 2
      type: http
    - name: svc-0-3-27
      numReplicas: 2
      type: http
    - name: svc-0-3-28
      numReplicas: 2
      type: http
    - name: svc-0-3-29
      numReplicas: 2
      type: http
    - name: svc-0-3-30
      numReplicas: 2
      type: http
    - name: svc-0-3-31
      numReplicas: 2
      type: http
    - name: svc-0-3-32
      numReplicas: 2
      type: http
    - name: svc-0-3-33
      numReplicas: 2
      type: http
    - name: svc-0-3-34
      numReplicas: 2
      type: http
    - name: svc-0-3-35
      numReplicas: 2
      type: http
    - name: svc-0-3-36
      numReplicas: 2
      type: http
    - name: svc-0-3-37
      numReplicas: 2
      type: http
    - name: svc-0-3-38
      numReplicas: 2
      type: http
    - name: svc-0-3-39
      numReplicas: 2
      type: http
    - name: svc-0-3-40
      numReplicas: 2
      type: http
    - name: svc-0-3-41
      numReplicas: 2
      type: http
    - name: svc-0-3-42
      numReplicas: 2
      type: http
    - name: svc-0-3-43
      numReplicas: 2
      type: http
    - name: svc-0-3-44
      numReplicas: 2
      type: http
    - name: svc-0-3-45
      numReplicas: 2
      type: http
    - name: svc-0-3-46
      numReplicas: 2
      type: http
    - name: svc-0-3-47
      numReplicas: 2
      type: http
    - name: svc-0-3-48
      numReplicas: 2
      type: http
    - name: svc-0-3-49
      numReplicas: 2
      type: http
    - name: svc-0-3-50
      numReplicas: 2
      type: http
    - name: svc-0-3-51
      numReplicas: 2
      type: http
    - name: svc-0-3-52
      numReplicas: 2
      type: http
    - name: svc-0-3-53
      numReplicas: 2
      type: http
    - name: svc-0-3-54
      numReplicas: 2
      type: http
    - name: svc-0-3-55
      numReplicas: 2
      type: http
    - name: svc-0-3-56
      numReplicas: 2
      type: http
    - name: svc-0-3-57
      numReplicas: 2
      type: http
    - name: svc-0-3-58
      numReplicas: 2
      type: http
    - name: svc-0-3-59
      numReplicas: 2
      type: http
    - name: svc-0-3-60
      numReplicas: 2
      type: http
    - name: svc-0-3-61
      numReplicas: 2
      type: http
    - name: svc-0-3-62
      numReplicas: 2
      type: http
    - name: svc-0-3-63
      numReplicas: 2
      type: http
    - name: svc-0-3-64
      numReplicas: 2
      type: http
    - name: svc-0-3-65
      numReplicas: 2
      type: http
    - name: svc-0-3-66
      numReplicas: 2
      type: http
    - name: svc-0-3-67
      numReplicas: 2
      type: http
    - name: svc-0-3-68
      numReplicas: 2
      type: http
    - name: svc-0-3-69
      numReplicas: 2
      type: http
    - name: svc-0-3-70
      numReplicas: 2
      type: http
    - name: svc-0-3-71
      numReplicas: 2
      type: http
    - name: svc-0-3-72
      numReplicas: 2
      type: http
    - name: svc-0-3-73
      numReplicas: 2
      type: http
    - name: svc-0-3-74
      numReplicas: 2
      type: http
    - name: svc-0-3-75
      numReplicas: 2
      type: http
    - name: svc-0-3-76
      numReplicas: 2
      type: http
    - name: svc-0-3-77
      numReplicas: 2
      type: http
    - name: svc-0-3-78
      numReplicas: 2
      type: http
    - name: svc-0-3-79
      numReplicas: 2
      type: http
    - name: svc-0-3-80
      numReplicas: 2
      type: http
    - name: svc-0-3-81
      numReplicas: 2
      type: http
    - name: svc-0-3-82
      numReplicas: 2
      type: http
    - name: svc-0-3-83
      numReplicas: 2
      type: http
    - name: svc-0-3-84
      numReplicas: 2
      type: http
    - name: svc-0-3-85
      numReplicas: 2
      type: http
    - name: svc-0-3-86
      numReplicas: 2
      type: http
    - name: svc-0-3-87
      numReplicas: 2
      type: http
    - name: svc-0-3-88
      numReplicas: 2
      type: http
    - name: svc-0-3-89
      numReplicas: 2
      type: http
    - name: svc-0-3-90
      numReplicas: 2
      type: http
    - name: svc-0-3-91
      numReplicas: 2
      type: http
    - name: svc-0-3-92
      numReplicas: 2
      type: http
    - name: svc-0-3-93
      numReplicas: 2
      type: http
    - name: svc-0-3-94
      numReplicas: 2
      type: http
    - name: svc-0-3-95
      numReplicas: 2
      type: http
    - name: svc-0-3-96
      numReplicas: 2
      type: http
    - name: svc-0-3-97
      numReplicas: 2
      type: http
    - name: svc-0-3-98
      numReplicas: 2
      type: http
    - name: svc-0-3-99
      numReplicas: 2
      type: http
    - name: svc-0-4-0
      numReplicas: 2
      type: http
    - name: svc-0-4-1
      numReplicas: 2
      type: http
    - name: svc-0-4-2
      numReplicas: 2
      type: http
    - name: svc-0-4-3
      numReplicas: 2
      type: http
    - name: svc-0-4-4
      numReplicas: 2
      type: http
    - name: svc-0-4-5
      numReplicas: 2
      type: http
    - name: svc-0-4-6
      numReplicas: 2
      type: http
    - name: svc-0-4-7
      numReplicas: 2
      type: http
    - name: svc-0-4-8
      numReplicas: 2
      type: http
    - name: svc-0-4-9
      numReplicas: 2
      type: http
    - name: svc-0-4-10
      numReplicas: 2
      type: http
    - name: svc-0-4-11
      numReplicas: 2
      type: http
    - name: svc-0-4-12
      numReplicas: 2
      type: http
    - name: svc-0-4-13
      numReplicas: 2
      type: http
    - name: svc-0-4-14
      numReplicas: 2
      type: http
    - name: svc-0-4-15
      numReplicas: 2
      type: http
    - name: svc-0-4-16
      numReplicas: 2
      type: http
    - name: svc-0-4-17
      numReplicas: 2
      type: http
    - name: svc-0-4-18
      numReplicas: 2
      type: http
    - name: svc-0-4-19
      numReplicas: 2
      type: http
    - name: svc-0-4-20
      numReplicas: 2
      type: http
    - name: svc-0-4-21
      numReplicas: 2
      type: http
    - name: svc-0-4-22
      numReplicas: 2
      type: http
    - name: svc-0-4-23
      numReplicas: 2
      type: http
    - name: svc-0-4-24
      numReplicas: 2
      type: http
    - name: svc-0-4-25
      numReplicas: 2
      type: http
    - name: svc-0-4-26
      numReplicas: 2
      type: http
    - name: svc-0-4-27
      numReplicas: 2
      type: http
    - name: svc-0-4-28
      numReplicas: 2
      type: http
    - name: svc-0-4-29
      numReplicas: 2
      type: http
    - name: svc-0-4-30
      numReplicas: 2
      type: http
    - name: svc-0-4-31
      numReplicas: 2
      type: http
    - name: svc-0-4-32
      numReplicas: 2
      type: http
    - name: svc-0-4-33
      numReplicas: 2
      type: http
    - name: svc-0-4-34
      numReplicas: 2
      type: http
    - name: svc-0-4-35
      numReplicas: 2
      type: http
    - name: svc-0-4-36
      numReplicas: 2
      type: http
    - name: svc-0-4-37
      numReplicas: 2
      type: http
    - name: svc-0-4-38
      numReplicas: 2
      type: http
    - name: svc-0-4-39
      numReplicas: 2
      type: http
    - name: svc-0-4-40
      numReplicas: 2
      type: http
    - name: svc-0-4-41
      numReplicas: 2
      type: http
    - name: svc-0-4-42
      numReplicas: 2
      type: http
    - name: svc-0-4-43
      numReplicas: 2
      type: http
    - name: svc-0-4-44
      numReplicas: 2
      type: http
    - name: svc-0-4-45
      numReplicas: 2
      type: http
    - name: svc-0-4-46
      numReplicas: 2
      type: http
    - name: svc-0-4-47
      numReplicas: 2
      type: http
    - name: svc-0-4-48
      numReplicas: 2
      type: http
    - name: svc-0-4-49
      numReplicas: 2
      type: http
    - name: svc-0-4-50
      numReplicas: 2
      type: http
    - name: svc-0-4-51
      numReplicas: 2
      type: http
    - name: svc-0-4-52
      numReplicas: 2
      type: http
    - name: svc-0-4-53
      numReplicas: 2
      type: http
    - name: svc-0-4-54
      numReplicas: 2
      type: http
    - name: svc-0-4-55
      numReplicas: 2
      type: http
    - name: svc-0-4-56
      numReplicas: 2
      type: http
    - name: svc-0-4-57
      numReplicas: 2
      type: http
    - name: svc-0-4-58
      numReplicas: 2
      type: http
    - name: svc-0-4-59
      numReplicas: 2
      type: http
    - name: svc-0-4-60
      numReplicas: 2
      type: http
    - name: svc-0-4-61
      numReplicas: 2
      type: http
    - name: svc-0-4-62
      numReplicas: 2
      type: http
    - name: svc-0-4-63
      numReplicas: 2
      type: http
    - name: svc-0-4-64
      numReplicas: 2
      type: http
    - name: svc-0-4-65
      numReplicas: 2
      type: http
    - name: svc-0-4-66
      numReplicas: 2
      type: http
    - name: svc-0-4-67
      numReplicas: 2
      type: http
    - name: svc-0-4-68
      numReplicas: 2
      type: http
    - name: svc-0-4-69
      numReplicas: 2
      type: http
    - name: svc-0-4-70
      numReplicas: 2
      type: http
    - name: svc-0-4-71
      numReplicas: 2
      type: http
    - name: svc-0-4-72
      numReplicas: 2
      type: http
    - name: svc-0-4-73
      numReplicas: 2
      type: http
    - name: svc-0-4-74
      numReplicas: 2
      type: http
    - name: svc-0-4-75
      numReplicas: 2
      type: http
    - name: svc-0-4-76
      numReplicas: 2
      type: http
    - name: svc-0-4-77
      numReplicas: 2
      type: http
    - name: svc-0-4-78
      numReplicas: 2
      type: http
    - name: svc-0-4-79
      numReplicas: 2
      type: http
    - name: svc-0-4-80
      numReplicas: 2
      type: http
    - name: svc-0-4-81
      numReplicas: 2
      type: http
    - name: svc-0-4-82
      numReplicas: 2
      type: http
    - name: svc-0-4-83
      numReplicas: 2
      type: http
    - name: svc-0-4-84
      numReplicas: 2
      type: http
    - name: svc-0-4-85
      numReplicas: 2
      type: http
    - name: svc-0-4-86
      numReplicas: 2
      type: http
    - name: svc-0-4-87
      numReplicas: 2
      type: http
    - name: svc-0-4-88
      numReplicas: 2
      type: http
    - name: svc-0-4-89
      numReplicas: 2
      type: http
    - name: svc-0-4-90
      numReplicas: 2
      type: http
    - name: svc-0-4-91
      numReplicas: 2
      type: http
    - name: svc-0-4-92
      numReplicas: 2
      type: http
    - name: svc-0-4-93
      numReplicas: 2
      type: http
    - name: svc-0-4-94
      numReplicas: 2
      type: http
    - name: svc-0-4-95
      numReplicas: 2
      type: http
    - name: svc-0-4-96
      numReplicas: 2
      type: http
    - name: svc-0-4-97
      numReplicas: 2
      type: http
    - name: svc-0-4-98
      numReplicas: 2
      type: http
    - name: svc-0-4-99
      numReplicas: 2
      type: http
    - name: svc-0-5-0
      numReplicas: 2
      type: http
    - name: svc-0-5-1
      numReplicas: 2
      type: http
    - name: svc-0-5-2
      numReplicas: 2
      type: http
    - name: svc-0-5-3
      numReplicas: 2
      type: http
    - name: svc-0-5-4
      numReplicas: 2
      type: http
    - name: svc-0-5-5
      numReplicas: 2
      type: http
    - name: svc-0-5-6
      numReplicas: 2
      type: http
    - name: svc-0-5-7
      numReplicas: 2
      type: http
    - name: svc-0-5-8
      numReplicas: 2
      type: http
    - name: svc-0-5-9
      numReplicas: 2
      type: http
    - name: svc-0-5-10
      numReplicas: 2
      type: http
    - name: svc-0-5-11
      numReplicas: 2
      type: http
    - name: svc-0-5-12
      numReplicas: 2
      type: http
    - name: svc-0-5-13
      numReplicas: 2
      type: http
    - name: svc-0-5-14
      numReplicas: 2
      type: http
    - name: svc-0-5-15
      numReplicas: 2
      type: http
    - name: svc-0-5-16
      numReplicas: 2
      type: http
    - name: svc-0-5-17
      numReplicas: 2
      type: http
    - name: svc-0-5-18
      numReplicas: 2
      type: http
    - name: svc-0-5-19
      numReplicas: 2
      type: http
    - name: svc-0-5-20
      numReplicas: 2
      type: http
    - name: svc-0-5-21
      numReplicas: 2
      type: http
    - name: svc-0-5-22
      numReplicas: 2
      type: http
    - name: svc-0-5-23
      numReplicas: 2
      type: http
    - name: svc-0-5-24
      numReplicas: 2
      type: http
    - name: svc-0-5-25
      numReplicas: 2
      type: http
    - name: svc-0-5-26
      numReplicas: 2
      type: http
    - name: svc-0-5-27
      numReplicas: 2
      type: http
    - name: svc-0-5-28
      numReplicas: 2
      type: http
    - name: svc-0-5-29
      numReplicas: 2
      type: http
    - name: svc-0-5-30
      numReplicas: 2
      type: http
    - name: svc-0-5-31
      numReplicas: 2
      type: http
    - name: svc-0-5-32
      numReplicas: 2
      type: http
    - name: svc-0-5-33
      numReplicas: 2
      type: http
    - name: svc-0-5-34
      numReplicas: 2
      type: http
    - name: svc-0-5-35
      numReplicas: 2
      type: http
    - name: svc-0-5-36
      numReplicas: 2
      type: http
    - name: svc-0-5-37
      numReplicas: 2
      type: http
    - name: svc-0-5-38
      numReplicas: 2
      type: http
    - name: svc-0-5-39
      numReplicas: 2
      type: http
    - name: svc-0-5-40
      numReplicas: 2
      type: http
    - name: svc-0-5-41
      numReplicas: 2
      type: http
    - name: svc-0-5-42
      numReplicas: 2
      type: http
    - name: svc-0-5-43
      numReplicas: 2
      type: http
    - name: svc-0-5-44
      numReplicas: 2
      type: http
    - name: svc-0-5-45
      numReplicas: 2
      type: http
    - name: svc-0-5-46
      numReplicas: 2
      type: http
    - name: svc-0-5-47
      numReplicas: 2
      type: http
    - name: svc-0-5-48
      numReplicas: 2
      type: http
    - name: svc-0-5-49
      numReplicas: 2
      type: http
    - name: svc-0-5-50
      numReplicas: 2
      type: http
    - name: svc-0-5-51
      numReplicas: 2
      type: http
    - name: svc-0-5-52
      numReplicas: 2
      type: http
    - name: svc-0-5-53
      numReplicas: 2
      type: http
    - name: svc-0-5-54
      numReplicas: 2
      type: http
    - name: svc-0-5-55
      numReplicas: 2
      type: http
    - name: svc-0-5-56
      numReplicas: 2
      type: http
    - name: svc-0-5-57
      numReplicas: 2
      type: http
    - name: svc-0-5-58
      numReplicas: 2
      type: http
    - name: svc-0-5-59
      numReplicas: 2
      type: http
    - name: svc-0-5-60
      numReplicas: 2
      type: http
    - name: svc-0-5-61
      numReplicas: 2
      type: http
    - name: svc-0-5-62
      numReplicas: 2
      type: http
    - name: svc-0-5-63
      numReplicas: 2
      type: http
    - name: svc-0-5-64
      numReplicas: 2
      type: http
    - name: svc-0-5-65
      numReplicas: 2
      type: http
    - name: svc-0-5-66
      numReplicas: 2
      type: http
    - name: svc-0-5-67
      numReplicas: 2
      type: http
    - name: svc-0-5-68
      numReplicas: 2
      type: http
    - name: svc-0-5-69
      numReplicas: 2
      type: http
    - name: svc-0-5-70
      numReplicas: 2
      type: http
    - name: svc-0-5-71
      numReplicas: 2
      type: http
    - name: svc-0-5-72
      numReplicas: 2
      type: http
    - name: svc-0-5-73
      numReplicas: 2
      type: http
    - name: svc-0-5-74
      numReplicas: 2
      type: http
    - name: svc-0-5-75
      numReplicas: 2
      type: http
    - name: svc-0-5-76
      numReplicas: 2
      type: http
    - name: svc-0-5-77
      numReplicas: 2
      type: http
    - name: svc-0-5-78
      numReplicas: 2
      type: http
    - name: svc-0-5-79
      numReplicas: 2
      type: http
    - name: svc-0-5-80
      numReplicas: 2
      type: http
    - name: svc-0-5-81
      numReplicas: 2
      type: http
    - name: svc-0-5-82
      numReplicas: 2
      type: http
    - name: svc-0-5-83
      numReplicas: 2
      type: http
    - name: svc-0-5-84
      numReplicas: 2
      type: http
    - name: svc-0-5-85
      numReplicas: 2
      type: http
    - name: svc-0-5-86
      numReplicas: 2
      type: http
    - name: svc-0-5-87
      numReplicas: 2
      type: http
    - name: svc-0-5-88
      numReplicas: 2
      type: http
    - name: svc-0-5-89
      numReplicas: 2
      type: http
    - name: svc-0-5-90
      numReplicas: 2
      type: http
    - name: svc-0-5-91
      numReplicas: 2
      type: http
    - name: svc-0-5-92
      numReplicas: 2
      type: http
    - name: svc-0-5-93
      numReplicas: 2
      type: http
    - name: svc-0-5-94
      numReplicas: 2
      type: http
    - name: svc-0-5-95
      numReplicas: 2
      type: http
    - name: svc-0-5-96
      numReplicas: 2
      type: http
    - name: svc-0-5-97
      numReplicas: 2
      type: http
    - name: svc-0-5-98
      numReplicas: 2
      type: http
    - name: svc-0-5-99
      numReplicas: 2
      type: http
    - name: svc-0-6-0
      numReplicas: 2
      type: http
    - name: svc-0-6-1
      numReplicas: 2
      type: http
    - name: svc-0-6-2
      numReplicas: 2
      type: http
    - name: svc-0-6-3
      numReplicas: 2
      type: http
    - name: svc-0-6-4
      numReplicas: 2
      type: http
    - name: svc-0-6-5
      numReplicas: 2
      type: http
    - name: svc-0-6-6
      numReplicas: 2
      type: http
    - name: svc-0-6-7
      numReplicas: 2
      type: http
    - name: svc-0-6-8
      numReplicas: 2
      type: http
    - name: svc-0-6-9
      numReplicas: 2
      type: http
    - name: svc-0-6-10
      numReplicas: 2
      type: http
    - name: svc-0-6-11
      numReplicas: 2
      type: http
    - name: svc-0-6-12
      numReplicas: 2
      type: http
    - name: svc-0-6-13
      numReplicas: 2
      type: http
    - name: svc-0-6-14
      numReplicas: 2
      type: http
    - name: svc-0-6-15
      numReplicas: 2
      type: http
    - name: svc-0-6-16
      numReplicas: 2
      type: http
    - name: svc-0-6-17
      numReplicas: 2
      type: http
    - name: svc-0-6-18
      numReplicas: 2
      type: http
    - name: svc-0-6-19
      numReplicas: 2
      type: http
    - name: svc-0-6-20
      numReplicas: 2
      type: http
    - name: svc-0-6-21
      numReplicas: 2
      type: http
    - name: svc-0-6-22
      numReplicas: 2
      type: http
    - name: svc-0-6-23
      numReplicas: 2
      type: http
    - name: svc-0-6-24
      numReplicas: 2
      type: http
    - name: svc-0-6-25
      numReplicas: 2
      type: http
    - name: svc-0-6-26
      numReplicas: 2
      type: http
    - name: svc-0-6-27
      numReplicas: 2
      type: http
    - name: svc-0-6-28
      numReplicas: 2
      type: http
    - name: svc-0-6-29
      numReplicas: 2
      type: http
    - name: svc-0-6-30
      numReplicas: 2
      type: http
    - name: svc-0-6-31
      numReplicas: 2
      type: http
    - name: svc-0-6-32
      numReplicas: 2
      type: http
    - name: svc-0-6-33
      numReplicas: 2
      type: http
    - name: svc-0-6-34
      numReplicas: 2
      type: http
    - name: svc-0-6-35
      numReplicas: 2
      type: http
    - name: svc-0-6-36
      numReplicas: 2
      type: http
    - name: svc-0-6-37
      numReplicas: 2
      type: http
    - name: svc-0-6-38
      numReplicas: 2
      type: http
    - name: svc-0-6-39
      numReplicas: 2
      type: http
    - name: svc-0-6-40
      numReplicas: 2
      type: http
    - name: svc-0-6-41
      numReplicas: 2
      type: http
    - name: svc-0-6-42
      numReplicas: 2
      type: http
    - name: svc-0-6-43
      numReplicas: 2
      type: http
    - name: svc-0-6-44
      numReplicas: 2
      type: http
    - name: svc-0-6-45
      numReplicas: 2
      type: http
    - name: svc-0-6-46
      numReplicas: 2
      type: http
    - name: svc-0-6-47
      numReplicas: 2
      type: http
    - name: svc-0-6-48
      numReplicas: 2
      type: http
    - name: svc-0-6-49
      numReplicas: 2
      type: http
    - name: svc-0-6-50
      numReplicas: 2
      type: http
    - name: svc-0-6-51
      numReplicas: 2
      type: http
    - name: svc-0-6-52
      numReplicas: 2
      type: http
    - name: svc-0-6-53
      numReplicas: 2
      type: http
    - name: svc-0-6-54
      numReplicas: 2
      type: http
    - name: svc-0-6-55
      numReplicas: 2
      type: http
    - name: svc-0-6-56
      numReplicas: 2
      type: http
    - name: svc-0-6-57
      numReplicas: 2
      type: http
    - name: svc-0-6-58
      numReplicas: 2
      type: http
    - name: svc-0-6-59
      numReplicas: 2
      type: http
    - name: svc-0-6-60
      numReplicas: 2
      type: http
    - name: svc-0-6-61
      numReplicas: 2
      type: http
    - name: svc-0-6-62
      numReplicas: 2
      type: http
    - name: svc-0-6-63
      numReplicas: 2
      type: http
    - name: svc-0-6-64
      numReplicas: 2
      type: http
    - name: svc-0-6-65
      numReplicas: 2
      type: http
    - name: svc-0-6-66
      numReplicas: 2
      type: http
    - name: svc-0-6-67
      numReplicas: 2
      type: http
    - name: svc-0-6-68
      numReplicas: 2
      type: http
    - name: svc-0-6-69
      numReplicas: 2
      type: http
    - name: svc-0-6-70
      numReplicas: 2
      type: http
    - name: svc-0-6-71
      numReplicas: 2
      type: http
    - name: svc-0-6-72
      numReplicas: 2
      type: http
    - name: svc-0-6-73
      numReplicas: 2
      type: http
    - name: svc-0-6-74
      numReplicas: 2
      type: http
    - name: svc-0-6-75
      numReplicas: 2
      type: http
    - name: svc-0-6-76
      numReplicas: 2
      type: http
    - name: svc-0-6-77
      numReplicas: 2
      type: http
    - name: svc-0-6-78
      numReplicas: 2
      type: http
    - name: svc-0-6-79
      numReplicas: 2
      type: http
    - name: svc-0-6-80
      numReplicas: 2
      type: http
    - name: svc-0-6-81
      numReplicas: 2
      type: http
    - name: svc-0-6-82
      numReplicas: 2
      type: http
    - name: svc-0-6-83
      numReplicas: 2
      type: http
    - name: svc-0-6-84
      numReplicas: 2
      type: http
    - name: svc-0-6-85
      numReplicas: 2
      type: http
    - name: svc-0-6-86
      numReplicas: 2
      type: http
    - name: svc-0-6-87
      numReplicas: 2
      type: http
    - name: svc-0-6-88
      numReplicas: 2
      type: http
    - name: svc-0-6-89
      numReplicas: 2
      type: http
    - name: svc-0-6-90
      numReplicas: 2
      type: http
    - name: svc-0-6-91
      numReplicas: 2
      type: http
    - name: svc-0-6-92
      numReplicas: 2
      type: http
    - name: svc-0-6-93
      numReplicas: 2
      type: http
    - name: svc-0-6-94
      numReplicas: 2
      type: http
    - name: svc-0-6-95
      numReplicas: 2
      type: http
    - name: svc-0-6-96
      numReplicas: 2
      type: http
    - name: svc-0-6-97
      numReplicas: 2
      type: http
    - name: svc-0-6-98
      numReplicas: 2
      type: http
    - name: svc-0-6-99
      numReplicas: 2
      type: http
    - name: svc-0-7-0
      numReplicas: 2
      type: http
    - name: svc-0-7-1
      numReplicas: 2
      type: http
    - name: svc-0-7-2
      numReplicas: 2
      type: http
    - name: svc-0-7-3
      numReplicas: 2
      type: http
    - name: svc-0-7-4
      numReplicas: 2
      type: http
    - name: svc-0-7-5
      numReplicas: 2
      type: http
    - name: svc-0-7-6
      numReplicas: 2
      type: http
    - name: svc-0-7-7
      numReplicas: 2
      type: http
    - name: svc-0-7-8
      numReplicas: 2
      type: http
    - name: svc-0-7-9
      numReplicas: 2
      type: http
    - name: svc-0-7-10
      numReplicas: 2
      type: http
    - name: svc-0-7-11
      numReplicas: 2
      type: http
    - name: svc-0-7-12
      numReplicas: 2
      type: http
    - name: svc-0-7-13
      numReplicas: 2
      type: http
    - name: svc-0-7-14
      numReplicas: 2
      type: http
    - name: svc-0-7-15
      numReplicas: 2
      type: http
    - name: svc-0-7-16
      numReplicas: 2
      type: http
    - name: svc-0-7-17
      numReplicas: 2
      type: http
    - name: svc-0-7-18
      numReplicas: 2
      type: http
    - name: svc-0-7-19
      numReplicas: 2
      type: http
    - name: svc-0-7-20
      numReplicas: 2
      type: http
    - name: svc-0-7-21
      numReplicas: 2
      type: http
    - name: svc-0-7-22
      numReplicas: 2
      type: http
    - name: svc-0-7-23
      numReplicas: 2
      type: http
    - name: svc-0-7-24
      numReplicas: 2
      type: http
    - name: svc-0-7-25
      numReplicas: 2
      type: http
    - name: svc-0-7-26
      numReplicas: 2
      type: http
    - name: svc-0-7-27
      numReplicas: 2
      type: http
    - name: svc-0-7-28
      numReplicas: 2
      type: http
    - name: svc-0-7-29
      numReplicas: 2
      type: http
    - name: svc-0-7-30
      numReplicas: 2
      type: http
    - name: svc-0-7-31
      numReplicas: 2
      type: http
    - name: svc-0-7-32
      numReplicas: 2
      type: http
    - name: svc-0-7-33
      numReplicas: 2
      type: http
    - name: svc-0-7-34
      numReplicas: 2
      type: http
    - name: svc-0-7-35
      numReplicas: 2
      type: http
    - name: svc-0-7-36
      numReplicas: 2
      type: http
    - name: svc-0-7-37
      numReplicas: 2
      type: http
    - name: svc-0-7-38
      numReplicas: 2
      type: http
    - name: svc-0-7-39
      numReplicas: 2
      type: http
    - name: svc-0-7-40
      numReplicas: 2
      type: http
    - name: svc-0-7-41
      numReplicas: 2
      type: http
    - name: svc-0-7-42
      numReplicas: 2
      type: http
    - name: svc-0-7-43
      numReplicas: 2
      type: http
    - name: svc-0-7-44
      numReplicas: 2
      type: http
    - name: svc-0-7-45
      numReplicas: 2
      type: http
    - name: svc-0-7-46
      numReplicas: 2
      type: http
    - name: svc-0-7-47
      numReplicas: 2
      type: http
    - name: svc-0-7-48
      numReplicas: 2
      type: http
    - name: svc-0-7-49
      numReplicas: 2
      type: http
    - name: svc-0-7-50
      numReplicas: 2
      type: http
    - name: svc-0-7-51
      numReplicas: 2
      type: http
    - name: svc-0-7-52
      numReplicas: 2
      type: http
    - name: svc-0-7-53
      numReplicas: 2
      type: http
    - name: svc-0-7-54
      numReplicas: 2
      type: http
    - name: svc-0-7-55
      numReplicas: 2
      type: http
    - name: svc-0-7-56
      numReplicas: 2
      type: http
    - name: svc-0-7-57
      numReplicas: 2
      type: http
    - name: svc-0-7-58
      numReplicas: 2
      type: http
    - name: svc-0-7-59
      numReplicas: 2
      type: http
    - name: svc-0-7-60
      numReplicas: 2
      type: http
    - name: svc-0-7-61
      numReplicas: 2
      type: http
    - name: svc-0-7-62
      numReplicas: 2
      type: http
    - name: svc-0-7-63
      numReplicas: 2
      type: http
    - name: svc-0-7-64
      numReplicas: 2
      type: http
    - name: svc-0-7-65
      numReplicas: 2
      type: http
    - name: svc-0-7-66
      numReplicas: 2
      type: http
    - name: svc-0-7-67
      numReplicas: 2
      type: http
    - name: svc-0-7-68
      numReplicas: 2
      type: http
    - name: svc-0-7-69
      numReplicas: 2
      type: http
    - name: svc-0-7-70
      numReplicas: 2
      type: http
    - name: svc-0-7-71
      numReplicas: 2
      type: http
    - name: svc-0-7-72
      numReplicas: 2
      type: http
    - name: svc-0-7-73
      numReplicas: 2
      type: http
    - name: svc-0-7-74
      numReplicas: 2
      type: http
    - name: svc-0-7-75
      numReplicas: 2
      type: http
    - name: svc-0-7-76
      numReplicas: 2
      type: http
    - name: svc-0-7-77
      numReplicas: 2
      type: http
    - name: svc-0-7-78
      numReplicas: 2
      type: http
    - name: svc-0-7-79
      numReplicas: 2
      type: http
    - name: svc-0-7-80
      numReplicas: 2
      type: http
    - name: svc-0-7-81
      numReplicas: 2
      type: http
    - name: svc-0-7-82
      numReplicas: 2
      type: http
    - name: svc-0-7-83
      numReplicas: 2
      type: http
    - name: svc-0-7-84
      numReplicas: 2
      type: http
    - name: svc-0-7-85
      numReplicas: 2
      type: http
    - name: svc-0-7-86
      numReplicas: 2
      type: http
    - name: svc-0-7-87
      numReplicas: 2
      type: http
    - name: svc-0-7-88
      numReplicas: 2
      type: http
    - name: svc-0-7-89
      numReplicas: 2
      type: http
    - name: svc-0-7-90
      numReplicas: 2
      type: http
    - name: svc-0-7-91
      numReplicas: 2
      type: http
    - name: svc-0-7-92
      numReplicas: 2
      type: http
    - name: svc-0-7-93
      numReplicas: 2
      type: http
    - name: svc-0-7-94
      numReplicas: 2
      type: http
    - name: svc-0-7-95
      numReplicas: 2
      type: http
    - name: svc-0-7-96
      numReplicas: 2
      type: http
    - name: svc-0-7-97
      numReplicas: 2
      type: http
    - name: svc-0-7-98
      numReplicas: 2
      type: http
    - name: svc-0-7-99
      numReplicas: 2
      type: http
    - name: svc-0-8-0
      numReplicas: 2
      type: http
    - name: svc-0-8-1
      numReplicas: 2
      type: http
    - name: svc-0-8-2
      numReplicas: 2
      type: http
    - name: svc-0-8-3
      numReplicas: 2
      type: http
    - name: svc-0-8-4
      numReplicas: 2
      type: http
    - name: svc-0-8-5
      numReplicas: 2
      type: http
    - name: svc-0-8-6
      numReplicas: 2
      type: http
    - name: svc-0-8-7
      numReplicas: 2
      type: http
    - name: svc-0-8-8
      numReplicas: 2
      type: http
    - name: svc-0-8-9
      numReplicas: 2
      type: http
    - name: svc-0-8-10
      numReplicas: 2
      type: http
    - name: svc-0-8-11
      numReplicas: 2
      type: http
    - name: svc-0-8-12
      numReplicas: 2
      type: http
    - name: svc-0-8-13
      numReplicas: 2
      type: http
    - name: svc-0-8-14
      numReplicas: 2
      type: http
    - name: svc-0-8-15
      numReplicas: 2
      type: http
    - name: svc-0-8-16
      numReplicas: 2
      type: http
    - name: svc-0-8-17
      numReplicas: 2
      type: http
    - name: svc-0-8-18
      numReplicas: 2
      type: http
    - name: svc-0-8-19
      numReplicas: 2
      type: http
    - name: svc-0-8-20
      numReplicas: 2
      type: http
    - name: svc-0-8-21
      numReplicas: 2
      type: http
    - name: svc-0-8-22
      numReplicas: 2
      type: http
    - name: svc-0-8-23
      numReplicas: 2
      type: http
    - name: svc-0-8-24
      numReplicas: 2
      type: http
    - name: svc-0-8-25
      numReplicas: 2
      type: http
    - name: svc-0-8-26
      numReplicas: 2
      type: http
    - name: svc-0-8-27
      numReplicas: 2
      type: http
    - name: svc-0-8-28
      numReplicas: 2
      type: http
    - name: svc-0-8-29
      numReplicas: 2
      type: http
    - name: svc-0-8-30
      numReplicas: 2
      type: http
    - name: svc-0-8-31
      numReplicas: 2
      type: http
    - name: svc-0-8-32
      numReplicas: 2
      type: http
    - name: svc-0-8-33
      numReplicas: 2
      type: http
    - name: svc-0-8-34
      numReplicas: 2
      type: http
    - name: svc-0-8-35
      numReplicas: 2
      type: http
    - name: svc-0-8-36
      numReplicas: 2
      type: http
    - name: svc-0-8-37
      numReplicas: 2
      type: http
    - name: svc-0-8-38
      numReplicas: 2
      type: http
    - name: svc-0-8-39
      numReplicas: 2
      type: http
    - name: svc-0-8-40
      numReplicas: 2
      type: http
    - name: svc-0-8-41
      numReplicas: 2
      type: http
    - name: svc-0-8-42
      numReplicas: 2
      type: http
    - name: svc-0-8-43
      numReplicas: 2
      type: http
    - name: svc-0-8-44
      numReplicas: 2
      type: http
    - name: svc-0-8-45
      numReplicas: 2
      type: http
    - name: svc-0-8-46
      numReplicas: 2
      type: http
    - name: svc-0-8-47
      numReplicas: 2
      type: http
    - name: svc-0-8-48
      numReplicas: 2
      type: http
    - name: svc-0-8-49
      numReplicas: 2
      type: http
    - name: svc-0-8-50
      numReplicas: 2
      type: http
    - name: svc-0-8-51
      numReplicas: 2
      type: http
    - name: svc-0-8-52
      numReplicas: 2
      type: http
    - name: svc-0-8-53
      numReplicas: 2
      type: http
    - name: svc-0-8-54
      numReplicas: 2
      type: http
    - name: svc-0-8-55
      numReplicas: 2
      type: http
    - name: svc-0-8-56
      numReplicas: 2
      type: http
    - name: svc-0-8-57
      numReplicas: 2
      type: http
    - name: svc-0-8-58
      numReplicas: 2
      type: http
    - name: svc-0-8-59
      numReplicas: 2
      type: http
    - name: svc-0-8-60
      numReplicas: 2
      type: http
    - name: svc-0-8-61
      numReplicas: 2
      type: http
    - name: svc-0-8-62
      numReplicas: 2
      type: http
    - name: svc-0-8-63
      numReplicas: 2
      type: http
    - name: svc-0-8-64
      numReplicas: 2
      type: http
    - name: svc-0-8-65
      numReplicas: 2
      type: http
    - name: svc-0-8-66
      numReplicas: 2
      type: http
    - name: svc-0-8-67
      numReplicas: 2
      type: http
    - name: svc-0-8-68
      numReplicas: 2
      type: http
    - name: svc-0-8-69
      numReplicas: 2
      type: http
    - name: svc-0-8-70
      numReplicas: 2
      type: http
    - name: svc-0-8-71
      numReplicas: 2
      type: http
    - name: svc-0-8-72
      numReplicas: 2
      type: http
    - name: svc-0-8-73
      numReplicas: 2
      type: http
    - name: svc-0-8-74
      numReplicas: 2
      type: http
    - name: svc-0-8-75
      numReplicas: 2
      type: http
    - name: svc-0-8-76
      numReplicas: 2
      type: http
    - name: svc-0-8-77
      numReplicas: 2
      type: http
    - name: svc-0-8-78
      numReplicas: 2
      type: http
    - name: svc-0-8-79
      numReplicas: 2
      type: http
    - name: svc-0-8-80
      numReplicas: 2
      type: http
    - name: svc-0-8-81
      numReplicas: 2
      type: http
    - name: svc-0-8-82
      numReplicas: 2
      type: http
    - name: svc-0-8-83
      numReplicas: 2
      type: http
    - name: svc-0-8-84
      numReplicas: 2
      type: http
    - name: svc-0-8-85
      numReplicas: 2
      type: http
    - name: svc-0-8-86
      numReplicas: 2
      type: http
    - name: svc-0-8-87
      numReplicas: 2
      type: http
    - name: svc-0-8-88
      numReplicas: 2
      type: http
    - name: svc-0-8-89
      numReplicas: 2
      type: http
    - name: svc-0-8-90
      numReplicas: 2
      type: http
    - name: svc-0-8-91
      numReplicas: 2
      type: http
    - name: svc-0-8-92
      numReplicas: 2
      type: http
    - name: svc-0-8-93
      numReplicas: 2
      type: http
    - name: svc-0-8-94
      numReplicas: 2
      type: http
    - name: svc-0-8-95
      numReplicas: 2
      type: http
    - name: svc-0-8-96
      numReplicas: 2
      type: http
    - name: svc-0-8-97
      numReplicas: 2
      type: http
    - name: svc-0-8-98
      numReplicas: 2
      type: http
kind: ConfigMap
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: service-graph-config
  namespace: service-graph
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-6
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-6
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-6
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-7
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-7
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-7
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-8
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-8
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-8
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-9
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-9
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-9
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-9
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-9
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-9
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-10
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-10
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-10
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-10
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-10
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-10
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-11
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-11
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-11
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-11
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-11
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-11
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-12
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-12
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-12
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-12
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-12
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-12
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-13
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-13
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-13
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-13
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-13
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-13
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-14
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-14
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-14
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-14
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-14
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-14
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-15
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-15
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-15
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-15
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-15
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-15
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-16
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-16
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-16
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-16
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-16
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-16
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-17
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-17
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-17
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-17
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-17
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-17
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-18
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-18
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-18
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-18
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-18
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-18
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-19
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-19
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-19
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-19
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-19
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-19
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-20
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-20
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-20
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-20
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-20
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-20
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-21
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-21
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-21
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-21
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-21
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-21
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-22
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-22
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-22
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-22
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-22
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-22
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-23
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-23
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-23
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-23
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-23
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-23
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-24
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-24
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-24
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-24
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-24
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-24
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-25
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-25
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-25
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-25
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-25
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-25
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-26
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-26
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-26
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-26
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-26
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-26
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-27
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-27
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-27
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-27
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-27
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-27
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-28
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-28
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-28
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-28
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-28
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-28
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-29
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-29
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-29
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-29
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-29
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-29
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-30
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-30
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-30
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-30
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-30
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-30
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-31
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-31
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-31
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-31
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-31
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-31
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-32
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-32
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-32
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-32
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-32
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-32
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-33
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-33
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-33
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-33
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-33
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-33
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-34
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-34
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-34
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-34
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-34
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-34
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-35
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-35
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-35
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-35
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-35
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-35
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-36
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-36
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-36
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-36
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-36
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-36
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-37
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-37
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-37
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-37
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-37
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-37
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-38
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-38
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-38
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-38
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-38
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-38
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-39
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-39
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-39
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-39
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-39
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-39
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-40
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-40
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-40
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-40
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-40
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-40
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-41
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-41
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-41
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-41
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-41
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-41
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-42
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-42
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-42
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-42
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-42
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-42
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-43
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-43
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-43
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-43
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-43
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-43
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-44
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-44
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-44
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-44
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-44
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-44
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-45
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-45
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-45
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-45
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-45
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-45
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-46
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-46
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-46
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-46
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-46
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-46
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-47
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-47
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-47
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-47
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-47
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-47
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-48
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-48
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-48
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-48
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-48
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-48
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-49
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-49
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-49
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-49
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-49
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-49
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-50
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-50
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-50
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-50
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-50
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-50
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-51
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-51
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-51
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-51
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-51
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-51
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-52
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-52
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-52
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-52
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-52
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-52
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-53
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-53
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-53
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-53
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-53
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-53
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-54
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-54
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-54
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-54
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-54
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-54
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-55
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-55
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-55
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-55
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-55
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-55
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-56
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-56
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-56
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-56
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-56
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-56
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-57
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-57
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-57
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-57
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-57
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-57
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-58
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-58
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-58
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-58
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-58
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-58
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-59
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-59
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-59
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-59
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-59
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-59
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-60
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-60
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-60
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-60
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-60
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-60
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-61
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-61
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-61
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-61
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-61
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-61
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-62
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-62
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-62
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-62
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-62
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-62
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-63
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-63
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-63
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-63
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-63
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-63
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-64
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-64
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-64
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-64
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-64
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-64
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-65
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-65
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-65
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-65
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-65
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-65
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-66
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-66
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-66
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-66
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-66
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-66
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-67
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-67
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-67
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-67
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-67
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-67
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-68
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-68
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-68
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-68
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-68
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-68
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-69
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-69
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-69
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-69
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-69
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-69
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-70
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-70
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-70
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-70
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-70
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-70
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-71
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-71
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-71
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-71
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-71
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-71
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-72
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-72
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-72
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-72
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-72
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-72
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-73
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-73
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-73
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-73
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-73
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-73
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-74
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-74
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-74
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-74
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-74
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-74
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-75
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-75
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-75
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-75
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-75
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-75
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-76
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-76
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-76
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-76
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-76
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-76
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-77
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-77
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-77
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-77
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-77
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-77
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-78
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-78
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-78
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-78
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-78
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-78
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-79
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-79
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-79
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-79
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-79
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-79
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-80
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-80
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-80
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-80
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-80
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-80
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-81
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-81
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-81
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-81
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-81
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-81
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-82
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-82
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-82
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-82
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-82
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-82
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-83
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-83
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-83
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-83
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-83
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-83
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-84
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-84
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-84
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-84
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-84
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-84
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-85
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-85
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-85
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-85
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-85
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-85
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-86
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-86
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-86
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-86
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-86
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-86
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-87
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-87
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-87
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-87
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-87
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-87
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-88
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-88
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-88
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-88
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-88
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-88
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-89
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-89
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-89
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-89
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-89
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-89
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-90
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-90
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-90
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-90
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-90
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-90
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-91
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-91
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-91
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-91
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-91
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-91
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-92
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-92
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-92
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-92
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-92
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-92
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-93
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-93
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-93
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-93
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-93
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-93
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-94
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-94
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-94
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-94
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-94
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-94
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-95
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-95
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-95
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-95
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-95
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-95
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-96
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-96
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-96
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-96
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-96
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-96
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-97
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-97
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-97
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-97
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-97
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-97
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-98
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-98
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-98
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-98
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-98
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-98
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-99
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-99
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-99
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-99
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-99
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-99
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-0
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-0
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-0
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-0
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-0
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-0
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-1
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-1
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-1
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-1
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-1
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-1
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-2
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-2
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-2
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-2
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-2
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-2
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-3
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-3
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-3
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-3
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-3
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-3
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-4
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-4
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-4
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-4
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-4
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-4
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-5
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-5
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-5
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-5
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-5
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-5
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-6
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-6
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-6
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-6
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-6
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-6
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-7
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-7
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-7
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-7
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-7
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-7
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-8
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-8
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-8
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-8
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-8
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-8
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-9
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-9
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-9
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-9
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-9
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-9
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-10
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-10
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-10
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-10
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-10
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-10
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-11
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-11
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-11
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-11
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-11
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-11
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-12
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-12
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-12
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-12
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-12
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-12
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-13
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-13
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-13
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-13
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-13
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-13
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-14
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-14
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-14
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-14
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-14
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-14
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-15
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-15
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-15
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-15
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-15
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-15
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-16
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-16
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-16
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-16
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-16
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-16
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-17
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-17
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-17
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-17
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-17
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-17
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-18
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-18
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-18
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-18
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-18
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-18
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-19
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-19
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-19
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-19
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-19
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-19
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-20
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-20
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-20
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-20
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-20
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-20
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-21
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-21
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-21
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-21
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-21
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-21
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-22
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-22
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-22
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-22
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-22
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-22
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-23
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-23
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-23
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-23
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-23
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-23
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-24
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-24
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-24
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-24
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-24
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-24
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-25
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-25
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-25
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-25
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-25
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-25
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-26
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-26
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-26
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-26
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-26
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-26
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-27
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-27
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-27
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-27
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-27
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-27
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-28
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-28
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-28
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-28
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-28
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-28
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-29
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-29
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-29
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-29
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-29
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-29
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-30
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-30
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-30
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-30
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-30
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-30
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-31
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-31
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-31
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-31
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-31
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-31
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-32
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-32
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-32
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-32
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-32
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-32
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-33
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-33
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-33
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-33
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-33
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-33
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-34
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-34
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-34
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-34
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-34
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-34
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-35
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-35
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-35
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-35
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-35
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-35
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-36
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-36
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-36
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-36
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-36
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-36
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-37
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-37
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-37
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-37
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-37
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-37
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-38
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-38
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-38
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-38
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-38
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-38
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-39
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-39
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-39
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-39
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-39
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-39
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-40
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-40
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-40
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-40
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-40
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-40
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-41
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-41
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-41
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-41
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-41
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-41
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-42
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-42
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-42
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-42
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-42
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-42
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-43
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-43
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-43
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-43
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-43
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-43
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-44
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-44
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-44
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-44
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-44
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-44
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-45
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-45
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-45
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-45
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-45
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-45
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-46
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-46
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-46
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-46
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-46
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-46
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-47
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-47
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-47
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-47
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-47
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-47
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-48
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-48
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-48
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-48
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-48
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-48
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-49
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-49
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-49
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-49
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-49
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-49
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-50
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-50
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-50
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-50
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-50
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-50
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-51
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-51
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-51
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-51
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-51
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-51
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-52
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-52
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-52
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-52
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-52
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-52
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-53
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-53
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-53
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-53
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-53
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-53
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-54
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-54
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-54
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-54
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-54
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-54
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-55
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-55
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-55
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-55
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-55
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-55
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-56
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-56
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-56
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-56
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-56
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-56
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-57
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-57
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-57
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-57
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-57
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-57
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-58
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-58
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-58
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-58
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-58
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-58
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-59
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-59
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-59
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-59
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-59
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-59
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-60
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-60
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-60
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-60
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-60
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-60
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-61
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-61
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-61
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-61
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-61
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-61
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-62
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-62
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-62
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-62
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-62
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-62
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-63
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-63
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-63
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-63
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-63
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-63
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-64
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-64
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-64
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-64
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-64
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-64
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-65
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-65
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-65
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-65
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-65
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-65
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-66
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-66
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-66
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-66
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-66
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-66
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-67
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-67
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-67
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-67
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-67
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-67
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-68
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-68
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-68
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-68
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-68
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-68
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-69
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-69
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-69
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-69
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-69
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-69
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-70
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-70
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-70
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-70
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-70
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-70
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-71
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-71
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-71
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-71
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-71
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-71
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-72
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-72
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-72
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-72
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-72
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-72
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-73
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-73
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-73
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-73
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-73
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-73
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-74
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-74
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-74
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-74
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-74
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-74
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-75
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-75
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-75
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-75
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-75
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-75
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-76
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-76
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-76
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-76
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-76
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-76
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-77
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-77
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-77
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-77
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-77
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-77
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-78
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-78
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-78
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-78
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-78
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-78
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-79
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-79
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-79
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-79
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-79
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-79
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-80
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-80
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-80
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-80
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-80
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-80
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-81
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-81
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-81
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-81
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-81
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-81
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-82
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-82
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-82
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-82
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-82
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-82
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-83
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-83
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-83
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-83
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-83
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-83
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-84
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-84
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-84
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-84
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-84
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-84
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-85
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-85
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-85
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-85
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-85
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-85
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-86
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-86
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-86
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-86
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-86
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-86
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-87
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-87
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-87
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-87
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-87
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-87
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-88
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-88
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-88
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-88
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-88
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-88
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-89
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-89
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-89
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-89
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-89
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-89
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-90
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-90
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-90
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-90
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-90
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-90
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-91
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-91
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-91
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-91
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-91
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-91
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-92
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-92
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-92
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-92
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-92
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-92
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-93
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-93
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-93
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-93
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-93
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-93
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-94
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-94
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-94
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-94
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-94
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-94
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-95
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-95
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-95
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-95
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-95
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-95
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-96
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-96
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-96
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-96
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-96
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-96
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-97
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-97
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-97
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-97
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-97
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-97
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-98
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-98
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-98
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-98
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-98
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-98
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-99
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-0-99
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-0-99
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-0-99
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-0-99
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-0-99
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-0
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-0
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-0
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-0
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-0
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-0
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-1
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-1
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-1
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-1
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-1
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-1
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-2
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-2
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-2
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-2
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-2
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-2
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-3
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-3
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-3
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-3
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-3
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-3
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-4
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-4
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-4
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-4
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-4
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-4
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-5
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-5
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-5
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-5
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-5
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-5
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-6
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-6
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-6
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-6
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-6
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-6
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-7
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-7
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-7
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-7
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-7
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-7
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-8
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-8
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-8
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-8
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-8
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-8
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-9
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-9
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-9
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-9
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-9
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-9
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-10
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-10
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-10
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-10
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-10
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-10
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-11
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-11
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-11
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-11
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-11
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-11
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-12
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-12
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-12
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-12
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-12
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-12
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-13
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-13
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-13
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-13
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-13
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-13
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-14
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-14
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-14
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-14
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-14
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-14
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-15
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-15
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-15
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-15
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-15
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-15
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-16
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-16
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-16
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-16
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-16
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-16
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-17
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-17
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-17
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-17
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-17
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-17
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-18
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-18
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-18
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-18
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-18
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-18
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-19
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-19
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-19
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-19
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-19
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-19
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-20
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-20
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-20
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-20
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-20
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-20
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-21
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-21
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-21
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-21
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-21
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-21
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-22
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-22
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-22
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-22
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-22
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-22
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-23
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-23
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-23
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-23
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-23
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-23
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-24
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-24
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-24
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-24
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-24
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-24
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-25
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-25
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-25
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-25
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-25
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-25
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-26
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-26
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-26
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-26
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-26
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-26
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-27
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-27
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-27
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-27
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-27
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-27
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-28
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-28
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-28
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-28
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-28
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-28
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-29
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-29
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-29
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-29
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-29
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-29
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-30
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-30
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-30
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-30
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-30
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-30
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-31
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-31
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-31
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-31
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-31
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-31
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-32
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-32
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-32
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-32
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-32
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-32
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-33
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-33
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-33
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-33
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-33
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-33
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-34
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-34
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-34
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-34
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-34
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-34
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-35
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-35
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-35
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-35
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-35
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-35
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-36
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-36
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-36
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-36
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-36
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-36
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-37
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-37
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-37
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-37
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-37
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-37
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-38
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-38
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-38
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-38
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-38
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-38
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-39
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-39
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-39
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-39
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-39
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-39
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-40
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-40
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-40
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-40
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-40
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-40
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-41
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-41
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-41
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-41
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-41
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-41
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-42
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-42
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-42
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-42
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-42
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-42
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-43
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-43
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-43
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-43
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-43
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-43
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-44
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-44
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-44
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-44
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-44
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-44
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-45
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-45
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-45
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-45
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-45
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-45
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-46
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-46
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-46
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-46
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-46
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-46
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-47
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-47
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-47
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-47
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-47
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-47
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-48
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-48
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-48
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-48
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-48
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-48
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-49
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-49
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-49
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-49
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-49
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-49
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-50
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-50
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-50
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-50
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-50
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-50
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-51
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-51
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-51
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-51
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-51
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-51
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-52
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-52
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-52
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-52
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-52
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-52
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-53
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-53
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-53
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-53
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-53
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-53
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-54
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-54
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-54
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-54
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-54
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-54
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-55
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-55
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-55
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-55
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-55
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-55
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-56
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-56
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-56
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-56
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-56
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-56
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-57
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-57
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-57
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-57
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-57
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-57
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-58
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-58
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-58
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-58
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-58
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-58
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-59
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-59
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-59
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-59
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-59
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-59
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-60
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-60
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-60
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-60
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-60
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-60
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-61
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-61
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-61
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-61
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-61
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-61
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-62
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-62
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-62
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-62
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-62
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-62
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-63
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-63
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-63
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-63
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-63
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-63
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-64
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-64
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-64
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-64
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-64
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-64
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-65
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-65
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-65
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-65
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-65
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-65
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-66
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-66
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-66
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-66
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-66
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-66
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-67
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-67
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-67
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-67
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-67
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-67
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-68
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-68
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-68
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-68
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-68
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-68
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-69
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-69
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-69
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-69
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-69
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-69
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-70
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-70
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-70
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-70
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-70
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-70
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-71
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-71
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-71
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-71
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-71
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-71
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-72
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-72
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-72
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-72
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-72
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-72
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-73
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-73
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-73
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-73
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-73
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-73
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-74
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-74
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-74
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-74
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-74
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-74
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-75
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-75
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-75
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-75
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-75
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-75
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-76
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-76
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-76
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-76
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-76
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-76
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-77
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-77
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-77
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-77
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-77
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-77
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-78
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-78
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-78
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-78
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-78
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-78
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-79
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-79
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-79
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-79
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-79
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-79
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-80
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-80
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-80
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-80
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-80
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-80
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-81
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-81
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-81
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-81
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-81
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-81
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-82
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-82
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-82
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-82
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-82
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-82
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-83
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-83
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-83
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-83
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-83
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-83
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-84
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-84
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-84
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-84
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-84
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-84
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-85
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-85
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-85
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-85
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-85
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-85
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-86
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-86
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-86
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-86
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-86
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-86
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-87
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-87
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-87
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-87
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-87
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-87
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-88
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-88
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-88
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-88
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-88
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-88
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-89
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-89
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-89
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-89
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-89
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-89
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-90
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-90
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-90
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-90
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-90
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-90
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-91
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-91
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-91
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-91
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-91
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-91
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-92
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-92
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-92
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-92
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-92
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-92
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-93
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-93
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-93
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-93
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-93
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-93
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-94
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-94
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-94
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-94
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-94
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-94
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-95
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-95
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-95
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-95
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-95
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-95
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-96
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-96
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-96
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-96
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-96
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-96
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-97
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-97
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-97
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-97
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-97
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-97
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-98
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-98
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-98
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-98
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-98
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-98
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-99
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-1-99
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-1-99
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-1-99
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-1-99
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-1-99
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-0
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-0
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-0
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-0
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-0
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-0
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-1
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-1
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-1
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-1
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-1
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-1
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-2
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-2
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-2
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-2
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-2
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-2
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-3
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-3
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-3
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-3
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-3
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-3
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-4
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-4
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-4
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-4
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-4
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-4
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-5
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-5
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-5
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-5
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-5
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-5
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-6
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-6
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-6
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-6
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-6
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-6
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-7
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-7
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-7
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-7
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-7
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-7
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-8
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-8
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-8
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-8
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-8
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-8
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-9
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-9
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-9
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-9
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-9
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-9
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-10
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-10
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-10
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-10
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-10
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-10
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-11
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-11
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-11
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-11
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-11
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-11
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-12
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-12
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-12
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-12
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-12
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-12
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-13
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-13
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-13
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-13
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-13
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-13
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-14
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-14
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-14
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-14
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-14
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-14
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-15
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-15
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-15
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-15
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-15
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-15
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-16
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-16
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-16
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-16
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-16
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-16
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-17
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-17
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-17
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-17
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-17
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-17
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-18
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-18
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-18
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-18
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-18
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-18
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-19
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-19
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-19
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-19
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-19
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-19
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-20
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-20
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-20
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-20
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-20
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-20
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-21
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-21
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-21
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-21
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-21
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-21
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-22
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-22
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-22
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-22
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-22
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-22
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-23
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-23
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-23
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-23
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-23
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-23
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-24
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-24
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-24
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-24
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-24
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-24
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-25
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-25
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-25
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-25
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-25
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-25
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-26
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-26
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-26
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-26
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-26
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-26
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-27
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-27
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-27
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-27
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-27
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-27
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-28
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-28
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-28
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-28
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-28
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-28
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-29
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-29
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-29
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-29
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-29
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-29
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-30
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-30
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-30
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-30
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-30
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-30
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-31
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-31
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-31
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-31
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-31
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-31
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-32
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-32
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-32
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-32
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-32
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-32
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-33
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-33
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-33
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-33
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-33
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-33
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-34
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-34
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-34
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-34
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-34
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-34
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-35
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-35
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-35
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-35
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-35
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-35
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-36
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-36
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-36
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-36
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-36
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-36
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-37
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-37
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-37
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-37
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-37
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-37
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-38
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-38
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-38
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-38
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-38
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-38
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-39
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-39
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-39
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-39
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-39
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-39
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-40
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-40
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-40
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-40
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-40
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-40
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-41
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-41
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-41
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-41
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-41
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-41
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-42
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-42
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-42
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-42
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-42
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-42
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-43
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-43
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-43
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-43
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-43
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-43
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-44
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-44
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-44
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-44
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-44
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-44
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-45
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-45
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-45
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-45
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-45
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-45
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-46
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-46
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-46
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-46
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-46
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-46
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-47
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-47
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-47
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-47
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-47
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-47
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-48
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-48
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-48
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-48
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-48
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-48
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-49
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-49
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-49
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-49
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-49
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-49
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-50
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-50
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-50
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-50
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-50
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-50
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-51
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-51
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-51
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-51
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-51
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-51
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-52
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-52
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-52
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-52
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-52
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-52
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-53
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-53
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-53
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-53
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-53
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-53
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-54
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-54
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-54
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-54
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-54
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-54
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-55
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-55
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-55
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-55
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-55
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-55
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-56
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-56
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-56
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-56
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-56
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-56
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-57
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-57
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-57
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-57
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-57
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-57
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-58
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-58
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-58
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-58
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-58
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-58
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-59
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-59
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-59
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-59
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-59
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-59
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-60
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-60
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-60
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-60
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-60
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-60
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-61
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-61
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-61
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-61
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-61
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-61
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-62
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-62
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-62
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-62
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-62
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-62
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-63
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-63
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-63
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-63
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-63
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-63
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-64
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-64
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-64
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-64
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-64
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-64
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-65
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-65
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-65
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-65
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-65
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-65
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-66
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-66
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-66
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-66
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-66
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-66
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-67
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-67
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-67
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-67
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-67
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-67
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-68
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-68
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-68
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-68
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-68
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-68
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-69
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-69
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-69
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-69
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-69
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-69
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-70
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-70
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-70
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-70
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-70
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-70
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-71
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-71
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-71
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-71
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-71
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-71
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-72
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-72
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-72
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-72
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-72
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-72
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-73
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-73
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-73
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-73
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-73
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-73
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-74
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-74
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-74
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-74
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-74
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-74
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-75
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-75
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-75
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-75
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-75
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-75
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-76
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-76
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-76
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-76
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-76
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-76
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-77
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-77
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-77
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-77
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-77
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-77
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-78
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-78
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-78
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-78
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-78
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-78
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-79
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-79
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-79
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-79
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-79
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-79
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-80
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-80
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-80
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-80
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-80
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-80
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-81
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-81
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-81
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-81
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-81
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-81
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-82
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-82
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-82
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-82
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-82
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-82
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-83
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-83
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-83
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-83
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-83
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-83
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-84
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-84
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-84
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-84
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-84
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-84
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-85
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-85
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-85
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-85
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-85
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-85
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-86
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-86
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-86
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-86
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-86
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-86
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-87
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-87
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-87
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-87
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-87
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-87
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-88
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-88
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-88
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-88
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-88
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-88
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-89
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-89
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-89
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-89
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-89
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-89
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-90
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-90
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-90
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-90
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-90
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-90
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-91
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-91
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-91
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-91
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-91
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-91
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-92
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-92
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-92
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-92
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-92
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-92
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-93
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-93
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-93
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-93
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-93
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-93
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-94
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-94
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-94
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-94
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-94
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-94
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-95
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-95
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-95
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-95
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-95
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-95
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-96
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-96
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-96
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-96
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-96
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-96
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-97
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-97
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-97
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-97
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-97
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-97
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-98
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-98
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-98
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-98
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-98
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-98
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-99
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-2-99
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-2-99
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-2-99
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-2-99
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-2-99
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-0
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-0
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-0
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-0
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-0
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-0
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-1
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-1
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-1
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-1
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-1
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-1
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-2
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-2
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-2
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-2
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-2
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-2
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-3
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-3
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-3
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-3
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-3
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-3
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-4
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-4
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-4
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-4
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-4
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-4
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-5
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-5
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-5
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-5
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-5
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-5
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-6
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-6
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-6
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-6
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-6
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-6
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-7
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-7
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-7
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-7
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-7
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-7
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-8
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-8
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-8
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-8
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-8
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-8
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-9
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-9
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-9
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-9
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-9
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-9
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-10
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-10
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-10
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-10
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-10
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-10
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-11
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-11
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-11
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-11
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-11
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-11
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-12
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-12
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-12
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-12
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-12
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-12
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-13
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-13
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-13
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-13
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-13
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-13
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-14
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-14
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-14
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-14
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-14
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-14
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-15
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-15
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-15
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-15
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-15
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-15
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-16
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-16
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-16
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-16
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-16
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-16
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-17
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-17
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-17
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-17
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-17
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-17
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-18
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-18
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-18
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-18
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-18
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-18
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-19
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-19
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-19
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-19
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-19
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-19
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-20
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-20
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-20
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-20
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-20
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-20
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-21
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-21
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-21
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-21
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-21
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-21
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-22
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-22
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-22
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-22
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-22
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-22
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-23
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-23
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-23
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-23
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-23
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-23
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-24
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-24
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-24
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-24
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-24
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-24
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-25
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-25
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-25
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-25
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-25
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-25
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-26
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-26
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-26
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-26
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-26
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-26
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-27
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-27
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-27
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-27
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-27
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-27
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-28
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-28
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-28
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-28
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-28
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-28
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-29
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-29
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-29
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-29
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-29
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-29
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-30
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-30
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-30
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-30
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-30
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-30
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-31
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-31
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-31
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-31
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-31
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-31
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-32
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-32
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-32
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-32
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-32
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-32
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-33
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-33
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-33
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-33
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-33
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-33
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-34
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-34
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-34
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-34
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-34
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-34
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-35
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-35
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-35
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-35
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-35
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-35
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-36
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-36
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-36
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-36
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-36
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-36
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-37
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-37
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-37
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-37
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-37
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-37
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-38
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-38
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-38
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-38
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-38
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-38
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-39
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-39
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-39
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-39
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-39
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-39
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-40
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-40
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-40
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-40
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-40
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-40
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-41
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-41
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-41
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-41
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-41
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-41
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-42
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-42
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-42
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-42
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-42
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-42
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-43
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-43
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-43
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-43
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-43
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-43
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-44
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-44
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-44
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-44
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-44
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-44
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-45
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-45
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-45
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-45
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-45
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-45
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-46
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-46
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-46
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-46
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-46
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-46
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-47
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-47
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-47
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-47
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-47
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-47
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-48
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-48
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-48
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-48
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-48
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-48
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-49
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-49
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-49
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-49
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-49
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-49
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-50
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-50
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-50
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-50
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-50
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-50
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-51
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-51
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-51
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-51
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-51
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-51
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-52
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-52
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-52
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-52
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-52
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-52
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-53
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-53
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-53
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-53
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-53
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-53
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-54
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-54
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-54
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-54
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-54
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-54
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-55
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-55
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-55
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-55
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-55
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-55
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-56
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-56
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-56
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-56
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-56
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-56
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-57
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-57
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-57
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-57
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-57
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-57
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-58
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-58
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-58
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-58
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-58
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-58
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-59
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-59
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-59
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-59
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-59
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-59
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-60
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-60
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-60
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-60
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-60
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-60
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-61
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-61
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-61
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-61
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-61
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-61
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-62
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-62
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-62
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-62
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-62
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-62
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-63
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-63
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-63
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-63
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-63
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-63
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-64
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-64
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-64
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-64
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-64
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-64
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-65
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-65
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-65
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-65
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-65
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-65
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-66
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-66
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-66
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-66
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-66
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-66
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-67
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-67
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-67
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-67
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-67
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-67
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-68
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-68
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-68
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-68
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-68
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-68
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-69
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-69
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-69
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-69
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-69
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-69
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-70
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-70
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-70
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-70
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-70
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-70
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-71
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-71
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-71
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-71
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-71
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-71
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-72
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-72
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-72
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-72
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-72
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-72
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-73
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-73
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-73
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-73
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-73
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-73
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-74
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-74
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-74
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-74
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-74
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-74
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-75
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-75
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-75
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-75
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-75
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-75
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-76
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-76
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-76
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-76
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-76
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-76
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-77
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-77
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-77
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-77
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-77
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-77
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-78
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-78
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-78
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-78
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-78
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-78
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-79
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-79
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-79
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-79
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-79
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-79
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-80
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-80
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-80
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-80
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-80
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-80
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-81
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-81
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-81
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-81
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-81
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-81
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-82
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-82
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-82
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-82
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-82
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-82
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-83
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-83
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-83
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-83
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-83
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-83
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-84
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-84
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-84
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-84
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-84
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-84
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-85
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-85
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-85
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-85
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-85
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-85
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-86
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-86
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-86
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-86
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-86
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-86
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-87
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-87
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-87
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-87
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-87
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-87
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-88
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-88
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-88
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-88
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-88
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-88
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-89
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-89
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-89
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-89
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-89
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-89
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-90
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-90
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-90
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-90
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-90
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-90
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-91
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-91
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-91
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-91
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-91
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-91
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-92
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-92
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-92
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-92
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-92
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-92
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-93
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-93
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-93
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-93
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-93
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-93
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-94
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-94
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-94
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-94
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-94
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-94
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-95
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-95
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-95
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-95
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-95
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-95
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-96
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-96
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-96
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-96
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-96
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-96
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-97
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-97
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-97
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-97
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-97
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-97
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-98
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-98
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-98
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-98
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-98
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-98
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-99
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-3-99
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-3-99
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-3-99
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-3-99
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-3-99
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-0
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-0
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-0
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-0
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-0
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-0
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-1
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-1
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-1
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-1
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-1
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-1
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-2
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-2
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-2
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-2
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-2
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-2
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-3
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-3
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-3
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-3
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-3
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-3
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-4
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-4
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-4
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-4
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-4
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-4
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-5
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-5
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-5
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-5
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-5
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-5
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-6
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-6
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-6
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-6
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-6
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-6
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-7
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-7
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-7
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-7
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-7
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-7
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-8
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-8
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-8
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-8
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-8
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-8
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-9
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-9
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-9
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-9
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-9
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-9
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-10
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-10
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-10
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-10
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-10
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-10
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-11
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-11
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-11
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-11
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-11
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-11
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-12
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-12
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-12
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-12
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-12
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-12
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-13
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-13
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-13
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-13
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-13
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-13
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-14
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-14
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-14
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-14
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-14
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-14
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-15
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-15
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-15
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-15
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-15
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-15
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-16
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-16
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-16
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-16
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-16
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-16
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-17
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-17
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-17
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-17
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-17
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-17
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-18
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-18
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-18
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-18
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-18
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-18
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-19
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-19
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-19
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-19
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-19
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-19
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-20
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-20
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-20
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-20
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-20
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-20
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-21
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-21
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-21
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-21
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-21
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-21
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-22
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-22
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-22
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-22
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-22
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-22
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-23
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-23
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-23
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-23
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-23
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-23
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-24
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-24
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-24
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-24
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-24
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-24
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-25
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-25
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-25
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-25
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-25
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-25
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-26
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-26
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-26
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-26
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-26
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-26
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-27
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-27
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-27
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-27
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-27
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-27
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-28
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-28
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-28
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-28
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-28
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-28
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-29
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-29
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-29
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-29
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-29
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-29
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-30
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-30
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-30
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-30
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-30
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-30
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-31
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-31
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-31
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-31
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-31
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-31
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-32
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-32
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-32
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-32
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-32
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-32
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-33
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-33
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-33
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-33
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-33
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-33
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-34
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-34
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-34
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-34
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-34
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-34
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-35
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-35
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-35
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-35
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-35
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-35
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-36
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-36
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-36
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-36
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-36
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-36
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-37
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-37
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-37
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-37
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-37
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-37
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-38
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-38
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-38
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-38
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-38
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-38
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-39
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-39
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-39
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-39
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-39
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-39
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-40
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-40
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-40
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-40
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-40
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-40
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-41
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-41
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-41
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-41
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-41
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-41
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-42
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-42
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-42
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-42
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-42
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-42
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-43
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-43
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-43
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-43
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-43
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-43
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-44
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-44
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-44
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-44
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-44
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-44
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-45
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-45
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-45
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-45
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-45
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-45
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-46
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-46
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-46
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-46
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-46
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-46
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-47
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-47
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-47
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-47
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-47
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-47
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-48
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-48
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-48
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-48
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-48
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-48
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-49
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-49
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-49
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-49
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-49
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-49
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-50
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-50
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-50
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-50
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-50
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-50
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-51
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-51
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-51
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-51
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-51
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-51
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-52
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-52
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-52
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-52
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-52
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-52
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-53
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-53
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-53
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-53
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-53
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-53
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-54
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-54
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-54
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-54
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-54
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-54
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-55
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-55
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-55
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-55
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-55
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-55
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-56
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-56
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-56
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-56
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-56
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-56
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-57
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-57
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-57
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-57
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-57
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-57
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-58
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-58
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-58
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-58
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-58
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-58
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-59
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-59
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-59
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-59
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-59
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-59
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-60
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-60
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-60
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-60
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-60
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-60
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-61
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-61
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-61
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-61
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-61
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-61
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-62
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-62
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-62
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-62
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-62
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-62
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-63
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-63
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-63
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-63
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-63
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-63
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-64
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-64
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-64
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-64
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-64
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-64
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-65
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-65
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-65
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-65
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-65
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-65
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-66
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-66
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-66
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-66
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-66
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-66
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-67
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-67
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-67
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-67
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-67
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-67
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-68
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-68
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-68
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-68
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-68
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-68
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-69
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-69
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-69
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-69
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-69
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-69
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-70
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-70
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-70
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-70
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-70
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-70
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-71
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-71
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-71
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-71
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-71
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-71
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-72
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-72
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-72
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-72
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-72
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-72
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-73
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-73
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-73
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-73
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-73
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-73
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-74
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-74
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-74
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-74
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-74
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-74
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-75
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-75
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-75
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-75
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-75
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-75
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-76
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-76
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-76
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-76
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-76
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-76
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-77
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-77
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-77
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-77
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-77
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-77
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-78
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-78
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-78
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-78
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-78
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-78
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-79
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-79
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-79
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-79
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-79
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-79
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-80
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-80
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-80
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-80
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-80
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-80
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-81
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-81
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-81
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-81
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-81
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-81
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-82
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-82
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-82
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-82
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-82
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-82
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-83
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-83
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-83
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-83
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-83
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-83
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-84
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-84
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-84
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-84
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-84
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-84
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-85
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-85
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-85
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-85
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-85
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-85
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-86
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-86
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-86
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-86
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-86
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-86
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-87
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-87
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-87
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-87
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-87
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-87
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-88
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-88
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-88
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-88
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-88
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-88
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-89
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-89
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-89
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-89
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-89
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-89
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-90
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-90
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-90
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-90
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-90
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-90
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-91
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-91
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-91
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-91
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-91
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-91
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-92
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-92
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-92
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-92
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-92
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-92
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-93
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-93
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-93
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-93
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-93
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-93
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-94
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-94
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-94
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-94
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-94
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-94
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-95
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-95
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-95
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-95
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-95
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-95
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-96
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-96
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-96
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-96
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-96
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-96
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-97
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-97
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-97
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-97
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-97
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-97
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-98
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-98
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-98
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-98
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-98
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-98
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-99
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-4-99
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-4-99
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-4-99
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-4-99
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-4-99
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-0
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-0
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-0
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-0
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-0
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-0
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-1
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-1
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-1
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-1
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-1
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-1
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-2
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-2
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-2
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-2
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-2
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-2
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-3
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-3
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-3
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-3
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-3
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-3
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-4
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-4
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-4
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-4
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-4
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-4
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-5
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-5
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-5
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-5
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-5
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-5
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-6
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-6
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-6
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-6
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-6
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-6
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-7
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-7
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-7
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-7
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-7
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-7
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-8
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-8
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-8
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-8
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-8
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-8
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-9
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-9
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-9
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-9
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-9
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-9
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-10
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-10
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-10
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-10
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-10
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-10
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-11
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-11
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-11
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-11
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-11
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-11
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-12
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-12
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-12
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-12
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-12
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-12
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-13
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-13
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-13
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-13
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-13
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-13
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-14
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-14
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-14
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-14
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-14
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-14
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-15
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-15
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-15
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-15
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-15
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-15
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-16
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-16
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-16
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-16
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-16
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-16
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-17
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-17
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-17
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-17
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-17
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-17
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-18
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-18
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-18
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-18
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-18
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-18
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-19
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-19
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-19
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-19
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-19
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-19
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-20
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-20
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-20
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-20
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-20
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-20
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-21
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-21
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-21
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-21
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-21
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-21
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-22
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-22
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-22
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-22
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-22
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-22
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-23
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-23
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-23
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-23
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-23
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-23
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-24
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-24
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-24
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-24
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-24
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-24
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-25
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-25
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-25
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-25
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-25
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-25
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-26
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-26
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-26
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-26
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-26
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-26
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-27
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-27
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-27
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-27
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-27
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-27
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-28
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-28
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-28
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-28
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-28
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-28
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-29
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-29
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-29
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-29
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-29
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-29
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-30
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-30
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-30
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-30
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-30
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-30
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-31
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-31
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-31
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-31
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-31
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-31
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-32
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-32
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-32
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-32
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-32
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-32
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-33
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-33
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-33
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-33
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-33
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-33
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-34
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-34
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-34
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-34
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-34
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-34
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-35
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-35
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-35
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-35
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-35
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-35
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-36
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-36
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-36
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-36
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-36
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-36
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-37
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-37
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-37
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-37
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-37
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-37
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-38
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-38
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-38
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-38
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-38
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-38
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-39
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-39
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-39
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-39
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-39
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-39
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-40
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-40
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-40
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-40
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-40
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-40
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-41
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-41
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-41
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-41
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-41
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-41
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-42
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-42
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-42
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-42
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-42
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-42
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-43
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-43
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-43
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-43
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-43
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-43
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-44
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-44
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-44
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-44
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-44
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-44
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-45
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-45
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-45
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-45
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-45
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-45
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-46
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-46
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-46
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-46
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-46
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-46
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-47
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-47
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-47
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-47
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-47
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-47
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-48
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-48
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-48
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-48
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-48
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-48
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-49
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-49
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-49
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-49
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-49
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-49
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-50
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-50
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-50
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-50
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-50
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-50
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-51
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-51
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-51
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-51
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-51
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-51
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:22Z"
  labels:
    app: service-graph
  name: svc-0-5-52
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-52
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:22Z"
      labels:
        name: svc-0-5-52
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-52
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-52
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-52
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-53
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-53
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-53
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-53
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-53
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-53
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-54
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-54
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-54
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-54
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-54
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-54
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-55
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-55
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-55
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-55
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-55
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-55
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-56
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-56
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-56
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-56
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-56
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-56
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-57
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-57
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-57
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-57
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-57
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-57
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-58
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-58
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-58
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-58
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-58
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-58
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-59
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-59
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-59
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-59
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-59
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-59
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-60
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-60
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-60
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-60
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-60
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-60
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-61
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-61
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-61
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-61
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-61
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-61
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-62
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-62
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-62
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-62
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-62
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-62
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-63
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-63
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-63
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-63
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-63
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-63
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-64
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-64
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-64
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-64
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-64
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-64
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-65
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-65
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-65
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-65
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-65
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-65
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-66
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-66
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-66
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-66
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-66
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-66
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-67
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-67
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-67
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-67
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-67
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-67
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-68
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-68
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-68
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-68
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-68
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-68
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-69
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-69
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-69
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-69
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-69
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-69
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-70
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-70
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-70
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-70
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-70
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-70
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-71
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-71
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-71
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-71
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-71
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-71
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-72
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-72
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-72
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-72
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-72
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-72
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-73
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-73
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-73
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-73
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-73
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-73
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-74
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-74
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-74
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-74
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-74
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-74
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-75
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-75
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-75
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-75
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-75
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-75
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-76
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-76
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-76
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-76
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-76
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-76
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-77
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-77
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-77
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-77
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-77
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-77
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-78
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-78
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-78
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-78
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-78
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-78
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-79
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-79
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-79
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-79
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-79
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-79
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-80
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-80
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-80
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-80
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-80
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-80
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-81
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-81
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-81
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-81
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-81
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-81
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-82
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-82
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-82
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-82
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-82
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-82
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-83
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-83
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-83
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-83
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-83
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-83
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-84
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-84
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-84
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-84
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-84
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-84
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-85
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-85
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-85
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-85
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-85
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-85
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-86
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-86
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-86
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-86
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-86
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-86
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-87
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-87
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-87
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-87
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-87
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-87
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-88
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-88
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-88
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-88
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-88
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-88
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-89
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-89
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-89
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-89
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-89
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-89
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-90
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-90
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-90
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-90
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-90
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-90
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-91
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-91
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-91
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-91
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-91
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-91
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-92
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-92
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-92
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-92
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-92
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-92
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-93
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-93
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-93
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-93
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-93
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-93
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-94
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-94
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-94
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-94
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-94
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-94
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-95
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-95
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-95
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-95
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-95
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-95
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-96
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-96
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-96
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-96
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-96
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-96
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-97
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-97
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-97
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-97
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-97
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-97
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-98
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-98
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-98
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-98
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-98
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-98
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-99
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-5-99
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-5-99
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-5-99
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-5-99
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-5-99
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-0
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-0
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-0
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-0
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-0
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-0
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-1
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-1
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-1
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-1
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-1
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-1
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-2
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-2
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-2
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-2
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-2
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-2
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-3
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-3
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-3
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-3
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-3
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-3
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-4
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-4
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-4
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-4
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-4
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-4
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-5
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-5
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-5
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-5
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-5
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-5
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-6
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-6
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-6
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-6
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-6
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-6
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-7
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-7
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-7
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-7
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-7
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-7
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-8
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-8
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-8
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-8
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-8
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-8
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-9
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-9
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-9
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-9
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-9
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-9
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-10
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-10
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-10
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-10
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-10
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-10
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-11
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-11
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-11
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-11
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-11
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-11
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-12
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-12
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-12
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-12
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-12
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-12
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-13
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-13
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-13
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-13
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-13
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-13
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-14
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-14
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-14
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-14
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-14
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-14
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-15
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-15
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-15
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-15
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-15
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-15
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-16
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-16
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-16
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-16
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-16
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-16
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-17
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-17
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-17
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-17
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-17
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-17
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-18
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-18
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-18
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-18
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-18
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-18
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-19
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-19
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-19
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-19
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-19
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-19
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-20
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-20
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-20
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-20
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-20
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-20
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-21
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-21
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-21
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-21
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-21
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-21
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-22
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-22
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-22
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-22
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-22
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-22
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-23
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-23
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-23
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-23
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-23
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-23
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-24
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-24
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-24
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-24
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-24
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-24
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-25
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-25
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-25
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-25
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-25
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-25
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-26
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-26
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-26
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-26
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-26
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-26
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-27
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-27
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-27
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-27
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-27
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-27
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-28
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-28
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-28
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-28
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-28
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-28
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-29
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-29
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-29
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-29
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-29
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-29
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-30
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-30
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-30
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-30
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-30
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-30
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-31
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-31
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-31
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-31
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-31
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-31
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-32
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-32
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-32
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-32
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-32
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-32
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-33
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-33
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-33
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-33
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-33
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-33
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-34
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-34
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-34
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-34
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-34
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-34
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-35
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-35
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-35
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-35
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-35
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-35
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-36
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-36
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-36
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-36
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-36
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-36
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-37
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-37
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-37
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-37
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-37
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-37
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-38
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-38
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-38
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-38
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-38
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-38
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-39
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-39
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-39
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-39
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-39
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-39
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-40
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-40
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-40
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-40
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-40
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-40
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-41
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-41
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-41
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-41
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-41
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-41
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-42
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-42
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-42
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-42
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-42
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-42
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-43
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-43
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-43
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-43
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-43
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-43
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-44
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-44
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-44
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-44
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-44
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-44
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-45
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-45
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-45
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-45
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-45
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-45
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-46
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-46
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-46
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-46
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-46
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-46
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-47
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-47
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-47
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-47
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-47
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-47
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-48
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-48
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-48
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-48
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-48
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-48
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-49
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-49
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-49
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-49
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-49
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-49
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-50
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-50
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-50
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-50
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-50
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-50
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-51
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-51
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-51
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-51
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-51
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-51
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-52
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-52
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-52
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-52
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-52
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-52
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-53
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-53
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-53
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-53
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-53
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-53
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-54
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-54
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-54
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-54
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-54
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-54
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-55
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-55
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-55
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-55
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-55
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-55
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-56
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-56
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-56
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-56
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-56
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-56
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-57
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-57
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-57
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-57
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-57
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-57
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-58
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-58
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-58
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-58
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-58
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-58
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-59
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-59
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-59
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-59
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-59
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-59
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-60
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-60
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-60
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-60
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-60
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-60
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-61
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-61
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-61
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-61
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-61
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-61
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-62
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-62
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-62
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-62
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-62
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-62
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-63
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-63
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-63
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-63
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-63
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-63
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-64
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-64
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-64
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-64
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-64
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-64
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-65
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-65
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-65
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-65
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-65
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-65
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-66
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-66
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-66
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-66
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-66
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-66
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-67
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-67
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-67
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-67
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-67
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-67
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-68
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-68
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-68
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-68
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-68
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-68
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-69
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-69
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-69
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-69
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-69
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-69
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-70
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-70
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-70
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-70
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-70
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-70
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-71
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-71
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-71
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-71
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-71
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-71
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-72
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-72
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-72
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-72
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-72
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-72
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-73
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-73
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-73
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-73
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-73
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-73
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-74
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-74
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-74
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-74
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-74
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-74
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-75
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-75
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-75
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-75
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-75
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-75
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-76
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-76
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-76
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-76
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-76
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-76
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-77
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-77
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-77
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-77
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-77
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-77
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-78
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-78
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-78
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-78
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-78
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-78
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-79
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-79
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-79
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-79
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-79
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-79
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-80
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-80
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-80
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-80
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-80
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-80
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-81
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-81
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-81
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-81
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-81
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-81
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-82
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-82
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-82
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-82
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-82
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-82
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-83
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-83
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-83
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-83
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-83
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-83
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-84
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-84
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-84
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-84
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-84
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-84
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-85
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-85
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-85
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-85
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-85
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-85
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-86
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-86
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-86
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-86
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-86
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-86
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-87
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-87
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-87
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-87
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-87
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-87
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-88
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-88
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-88
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-88
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-88
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-88
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-89
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-89
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-89
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-89
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-89
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-89
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-90
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-90
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-90
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-90
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-90
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-90
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-91
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-91
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-91
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-91
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-91
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-91
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-92
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-92
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-92
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-92
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-92
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-92
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-93
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-93
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-93
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-93
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-93
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-93
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-94
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-94
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-94
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-94
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-94
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-94
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-95
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-95
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-95
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-95
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-95
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-95
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-96
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-96
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-96
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-96
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-96
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-96
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-97
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-97
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-97
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-97
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-97
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-97
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-98
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-98
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-98
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-98
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-98
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-98
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-99
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-6-99
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-6-99
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-6-99
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-6-99
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-6-99
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-0
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-0
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-0
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-0
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-0
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-0
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-1
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-1
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-1
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-1
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-1
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-1
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-2
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-2
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-2
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-2
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-2
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-2
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-3
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-3
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-3
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-3
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-3
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-3
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-4
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-4
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-4
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-4
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-4
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-4
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-5
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-5
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-5
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-5
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-5
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-5
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-6
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-6
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-6
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-6
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-6
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-6
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-7
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-7
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-7
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-7
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-7
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-7
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-8
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-8
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-8
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-8
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-8
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-8
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-9
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-9
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-9
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-9
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-9
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-9
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-10
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-10
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-10
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-10
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-10
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-10
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-11
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-11
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-11
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-11
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-11
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-11
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-12
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-12
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-12
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-12
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-12
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-12
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-13
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-13
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-13
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-13
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-13
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-13
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-14
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-14
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-14
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-14
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-14
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-14
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-15
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-15
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-15
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-15
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-15
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-15
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-16
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-16
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-16
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-16
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-16
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-16
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-17
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-17
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-17
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-17
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-17
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-17
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-18
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-18
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-18
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-18
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-18
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-18
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-19
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-19
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-19
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-19
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-19
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-19
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-20
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-20
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-20
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-20
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-20
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-20
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-21
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-21
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-21
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-21
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-21
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-21
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-22
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-22
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-22
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-22
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-22
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-22
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-23
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-23
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-23
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-23
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-23
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-23
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-24
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-24
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-24
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-24
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-24
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-24
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-25
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-25
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-25
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-25
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-25
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-25
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-26
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-26
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-26
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-26
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-26
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-26
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-27
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-27
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-27
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-27
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-27
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-27
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-28
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-28
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-28
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-28
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-28
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-28
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-29
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-29
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-29
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-29
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-29
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-29
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-30
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-30
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-30
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-30
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-30
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-30
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-31
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-31
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-31
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-31
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-31
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-31
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-32
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-32
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-32
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-32
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-32
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-32
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-33
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-33
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-33
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-33
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-33
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-33
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-34
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-34
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-34
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-34
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-34
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-34
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-35
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-35
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-35
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-35
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-35
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-35
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-36
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-36
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-36
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-36
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-36
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-36
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-37
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-37
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-37
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-37
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-37
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-37
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-38
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-38
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-38
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-38
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-38
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-38
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-39
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-39
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-39
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-39
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-39
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-39
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-40
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-40
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-40
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-40
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-40
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-40
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-41
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-41
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-41
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-41
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-41
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-41
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-42
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-42
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-42
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-42
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-42
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-42
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-43
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-43
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-43
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-43
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-43
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-43
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-44
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-44
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-44
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-44
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-44
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-44
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-45
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-45
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-45
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-45
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-45
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-45
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-46
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-46
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-46
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-46
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-46
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-46
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-47
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-47
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-47
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-47
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-47
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-47
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-48
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-48
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-48
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-48
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-48
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-48
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-49
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-49
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-49
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-49
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-49
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-49
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-50
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-50
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-50
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-50
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-50
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-50
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-51
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-51
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-51
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-51
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-51
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-51
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-52
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-52
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-52
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-52
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-52
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-52
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-53
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-53
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-53
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-53
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-53
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-53
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-54
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-54
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-54
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-54
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-54
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-54
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-55
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-55
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-55
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-55
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-55
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-55
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-56
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-56
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-56
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-56
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-56
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-56
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-57
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-57
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-57
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-57
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-57
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-57
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-58
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-58
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-58
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-58
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-58
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-58
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-59
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-59
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-59
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-59
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-59
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-59
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-60
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-60
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-60
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-60
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-60
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-60
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-61
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-61
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-61
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-61
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-61
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-61
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-62
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-62
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-62
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-62
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-62
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-62
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-63
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-63
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-63
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-63
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-63
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-63
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-64
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-64
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-64
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-64
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-64
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-64
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-65
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-65
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-65
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-65
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-65
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-65
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-66
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-66
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-66
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-66
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-66
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-66
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-67
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-67
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-67
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-67
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-67
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-67
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-68
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-68
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-68
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-68
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-68
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-68
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-69
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-69
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-69
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-69
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-69
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-69
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-70
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-70
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-70
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-70
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-70
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-70
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-71
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-71
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-71
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-71
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-71
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-71
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-72
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-72
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-72
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-72
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-72
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-72
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-73
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-73
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-73
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-73
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-73
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-73
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-74
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-74
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-74
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-74
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-74
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-74
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-75
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-75
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-75
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-75
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-75
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-75
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-76
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-76
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-76
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-76
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-76
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-76
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-77
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-77
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-77
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-77
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-77
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-77
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-78
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-78
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-78
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-78
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-78
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-78
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-79
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-79
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-79
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-79
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-79
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-79
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-80
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-80
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-80
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-80
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-80
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-80
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-81
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-81
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-81
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-81
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-81
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-81
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-82
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-82
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-82
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-82
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-82
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-82
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-83
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-83
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-83
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-83
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-83
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-83
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-84
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-84
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-84
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-84
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-84
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-84
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-85
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-85
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-85
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-85
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-85
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-85
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-86
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-86
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-86
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-86
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-86
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-86
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-87
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-87
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-87
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-87
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-87
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-87
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-88
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-88
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-88
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-88
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-88
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-88
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-89
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-89
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-89
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-89
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-89
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-89
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-90
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-90
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-90
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-90
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-90
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-90
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-91
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-91
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-91
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-91
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-91
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-91
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-92
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-92
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-92
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-92
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-92
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-92
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-93
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-93
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-93
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-93
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-93
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-93
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-94
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-94
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-94
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-94
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-94
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-94
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-95
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-95
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-95
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-95
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-95
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-95
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-96
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-96
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-96
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-96
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-96
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-96
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-97
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-97
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-97
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-97
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-97
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-97
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-98
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-98
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-98
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-98
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-98
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-98
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-99
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-7-99
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-7-99
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-7-99
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-7-99
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-7-99
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-0
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-0
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-0
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-0
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-0
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-0
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-1
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-1
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-1
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-1
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-1
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-1
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-2
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-2
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-2
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-2
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-2
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-2
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-3
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-3
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-3
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-3
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-3
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-3
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-4
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-4
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-4
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-4
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-4
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-4
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-5
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-5
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-5
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-5
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-5
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-5
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-6
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-6
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-6
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-6
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-6
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-6
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-7
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-7
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-7
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-7
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-7
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-7
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-8
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-8
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-8
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-8
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-8
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-8
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-9
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-9
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-9
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-9
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-9
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-9
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-10
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-10
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-10
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-10
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-10
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-10
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-11
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-11
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-11
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-11
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-11
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-11
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-12
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-12
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-12
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-12
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-12
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-12
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-13
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-13
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-13
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-13
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-13
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-13
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-14
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-14
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-14
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-14
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-14
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-14
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-15
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-15
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-15
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-15
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-15
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-15
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-16
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-16
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-16
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-16
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-16
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-16
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-17
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-17
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-17
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-17
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-17
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-17
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-18
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-18
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-18
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-18
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-18
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-18
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-19
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-19
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-19
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-19
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-19
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-19
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-20
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-20
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-20
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-20
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-20
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-20
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-21
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-21
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-21
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-21
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-21
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-21
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-22
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-22
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-22
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-22
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-22
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-22
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-23
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-23
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-23
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-23
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-23
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-23
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-24
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-24
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-24
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-24
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-24
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-24
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-25
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-25
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-25
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-25
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-25
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-25
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-26
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-26
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-26
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-26
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-26
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-26
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-27
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-27
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-27
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-27
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-27
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-27
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-28
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-28
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-28
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-28
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-28
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-28
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-29
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-29
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-29
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-29
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-29
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-29
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-30
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-30
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-30
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-30
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-30
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-30
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-31
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-31
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-31
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-31
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-31
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-31
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-32
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-32
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-32
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-32
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-32
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-32
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-33
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-33
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-33
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-33
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-33
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-33
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-34
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-34
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-34
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-34
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-34
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-34
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-35
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-35
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-35
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-35
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-35
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-35
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-36
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-36
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-36
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-36
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-36
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-36
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-37
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-37
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-37
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-37
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-37
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-37
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-38
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-38
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-38
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-38
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-38
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-38
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-39
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-39
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-39
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-39
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-39
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-39
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-40
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-40
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-40
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-40
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-40
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-40
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-41
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-41
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-41
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-41
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-41
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-41
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-42
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-42
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-42
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-42
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-42
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-42
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-43
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-43
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-43
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-43
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-43
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-43
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-44
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-44
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-44
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-44
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-44
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-44
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-45
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-45
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-45
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-45
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-45
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-45
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-46
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-46
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-46
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-46
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-46
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-46
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-47
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-47
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-47
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-47
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-47
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-47
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-48
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-48
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-48
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-48
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-48
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-48
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-49
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-49
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-49
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-49
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-49
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-49
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-50
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-50
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-50
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-50
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-50
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-50
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-51
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-51
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-51
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-51
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-51
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-51
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-52
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-52
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-52
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-52
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-52
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-52
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-53
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-53
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-53
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-53
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-53
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-53
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-54
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-54
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-54
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-54
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-54
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-54
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-55
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-55
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-55
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-55
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-55
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-55
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-56
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-56
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-56
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-56
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-56
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-56
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-57
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-57
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-57
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-57
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-57
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-57
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-58
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-58
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-58
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-58
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-58
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-58
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-59
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-59
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-59
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-59
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-59
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-59
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-60
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-60
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-60
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-60
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-60
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-60
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-61
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-61
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-61
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-61
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-61
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-61
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-62
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-62
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-62
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-62
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-62
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-62
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-63
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-63
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-63
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-63
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-63
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-63
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-64
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-64
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-64
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-64
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-64
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-64
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-65
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-65
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-65
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-65
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-65
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-65
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-66
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-66
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-66
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-66
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-66
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-66
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-67
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-67
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-67
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-67
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-67
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-67
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-68
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-68
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-68
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-68
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-68
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-68
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-69
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-69
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-69
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-69
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-69
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-69
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-70
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-70
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-70
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-70
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-70
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-70
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-71
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-71
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-71
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-71
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-71
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-71
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-72
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-72
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-72
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-72
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-72
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-72
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-73
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-73
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-73
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-73
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-73
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-73
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-74
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-74
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-74
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-74
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-74
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-74
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-75
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-75
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-75
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-75
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-75
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-75
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-76
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-76
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-76
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-76
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-76
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-76
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-77
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-77
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-77
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-77
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-77
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-77
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-78
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-78
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-78
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-78
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-78
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-78
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-79
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-79
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-79
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-79
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-79
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-79
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-80
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-80
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-80
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-80
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-80
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-80
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-81
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-81
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-81
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-81
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-81
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-81
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-82
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-82
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-82
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-82
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-82
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-82
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-83
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-83
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-83
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-83
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-83
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-83
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-84
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-84
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-84
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-84
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-84
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-84
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-85
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-85
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-85
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-85
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-85
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-85
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-86
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-86
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-86
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-86
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-86
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-86
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-87
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-87
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-87
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-87
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-87
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-87
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-88
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-88
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-88
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-88
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-88
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-88
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-89
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-89
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-89
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-89
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-89
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-89
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-90
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-90
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-90
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-90
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-90
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-90
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-91
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-91
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-91
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-91
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-91
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-91
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-92
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-92
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-92
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-92
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-92
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-92
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-93
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-93
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-93
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-93
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-93
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-93
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-94
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-94
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-94
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-94
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-94
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-94
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-95
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-95
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-95
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-95
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-95
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-95
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-96
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-96
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-96
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-96
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-96
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-96
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-97
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-97
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-97
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-97
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-97
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-97
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-98
  namespace: service-graph
spec:
  replicas: 2
  selector:
    matchLabels:
      name: svc-0-8-98
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        name: svc-0-8-98
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=0
        env:
        - name: SERVICE_NAME
          value: svc-0-8-98
        image: quay.io/erable/mock-service
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: service-graph
  name: svc-0-8-98
  namespace: service-graph
spec:
  ports:
  - name: tcp-8080
    port: 8080
    targetPort: 0
  selector:
    name: svc-0-8-98
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: client
  name: client
spec:
  selector:
    matchLabels:
      app: client
  strategy: {}
  template:
    metadata:
      creationTimestamp: "2022-05-20T08:42:23Z"
      labels:
        app: client
    spec:
      containers:
      - args:
        - server
        image: quay.io/erable/fortio
        name: fortio-client
        ports:
        - containerPort: 8080
        - containerPort: 42422
        resources: {}
      nodeSelector:
        node-role.kubernetes.io/worker: ""
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-05-20T08:42:23Z"
  labels:
    app: client
  name: client
spec:
  ports:
  - port: 8080
    targetPort: 0
  selector:
    app: client
status:
  loadBalancer: {}
